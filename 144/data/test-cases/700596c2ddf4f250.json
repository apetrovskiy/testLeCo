{"uid":"700596c2ddf4f250","name":"candidates = 1, target = 1, returns 1","fullName":"combinationSum([ 1, [length]: 1 ], 1) should equal 1.candidates = 1, target = 1, returns 1","historyId":"db881d7b3411808b8ffcea3b52648380","time":{"start":1688127199425,"stop":1688127199426,"duration":1},"description":"","descriptionHtml":"","status":"failed","statusMessage":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","statusTrace":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/challenges/c20201001_20201007/CombinationSum/combination_sum.test.js:35:56)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"combinationSum([ 1, [length]: 1 ], 1) should equal 1"},{"name":"testClass","value":"combinationSum([ 1, [length]: 1 ], 1) should equal 1"},{"name":"testMethod","value":"candidates = 1, target = 1, returns 1"},{"name":"package","value":"combinationSum([ 1, [length]: 1 ], 1) should equal 1"},{"name":"resultFormat","value":"allure1"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":62,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":62},"items":[{"uid":"eceef7c9381c2554","reportUrl":"https://apetrovskiy.github.io/testLeCo/143//#testresult/eceef7c9381c2554","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1688119373714,"stop":1688119373715,"duration":1}},{"uid":"f9fcc39390e7fb96","reportUrl":"https://apetrovskiy.github.io/testLeCo/141//#testresult/f9fcc39390e7fb96","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1688114571579,"stop":1688114571580,"duration":1}},{"uid":"e317d593f82341ea","reportUrl":"https://apetrovskiy.github.io/testLeCo/140//#testresult/e317d593f82341ea","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1688114477520,"stop":1688114477521,"duration":1}},{"uid":"f241b0e884864ab4","reportUrl":"https://apetrovskiy.github.io/testLeCo/139//#testresult/f241b0e884864ab4","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1688112205286,"stop":1688112205287,"duration":1}},{"uid":"5bf0d09c1d280ee9","reportUrl":"https://apetrovskiy.github.io/testLeCo/138//#testresult/5bf0d09c1d280ee9","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1688111546008,"stop":1688111546009,"duration":1}},{"uid":"809e48bd50ec8161","reportUrl":"https://apetrovskiy.github.io/testLeCo/137//#testresult/809e48bd50ec8161","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1685091044685,"stop":1685091044687,"duration":2}},{"uid":"972bdc114fe28a3e","reportUrl":"https://apetrovskiy.github.io/testLeCo/135//#testresult/972bdc114fe28a3e","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1679133332314,"stop":1679133332315,"duration":1}},{"uid":"bd4b70574c1393f3","reportUrl":"https://apetrovskiy.github.io/testLeCo/136//#testresult/bd4b70574c1393f3","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1679133369893,"stop":1679133369894,"duration":1}},{"uid":"3cd5192b09d9e958","reportUrl":"https://apetrovskiy.github.io/testLeCo/134//#testresult/3cd5192b09d9e958","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1668971736510,"stop":1668971736511,"duration":1}},{"uid":"7198ce83397c0a7a","reportUrl":"https://apetrovskiy.github.io/testLeCo/133//#testresult/7198ce83397c0a7a","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1668970671600,"stop":1668970671601,"duration":1}},{"uid":"ebd3618a2a4cacda","reportUrl":"https://apetrovskiy.github.io/testLeCo/132//#testresult/ebd3618a2a4cacda","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1668957541143,"stop":1668957541144,"duration":1}},{"uid":"b0136ecf5bb7612c","reportUrl":"https://apetrovskiy.github.io/testLeCo/131//#testresult/b0136ecf5bb7612c","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1668944161613,"stop":1668944161614,"duration":1}},{"uid":"bbbe68e0aa077465","reportUrl":"https://apetrovskiy.github.io/testLeCo/130//#testresult/bbbe68e0aa077465","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1668083748163,"stop":1668083748164,"duration":1}},{"uid":"1ae0a11982a274aa","reportUrl":"https://apetrovskiy.github.io/testLeCo/129//#testresult/1ae0a11982a274aa","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1633007452168,"stop":1633007452169,"duration":1}},{"uid":"d5e1cf11f4e211b6","reportUrl":"https://apetrovskiy.github.io/testLeCo/128//#testresult/d5e1cf11f4e211b6","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1633005418963,"stop":1633005418964,"duration":1}},{"uid":"9141dc41c93bb496","reportUrl":"https://apetrovskiy.github.io/testLeCo/127//#testresult/9141dc41c93bb496","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1632897211892,"stop":1632897211893,"duration":1}},{"uid":"b9d8ce6ee3482a11","reportUrl":"https://apetrovskiy.github.io/testLeCo/126//#testresult/b9d8ce6ee3482a11","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1632854629005,"stop":1632854629005,"duration":0}},{"uid":"49567decf08e05d0","reportUrl":"https://apetrovskiy.github.io/testLeCo/125//#testresult/49567decf08e05d0","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1622041612034,"stop":1622041612036,"duration":2}},{"uid":"6ebee9213030c1b6","reportUrl":"https://apetrovskiy.github.io/testLeCo/123//#testresult/6ebee9213030c1b6","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1622041305122,"stop":1622041305124,"duration":2}},{"uid":"e045fc0e51dd3e49","reportUrl":"https://apetrovskiy.github.io/testLeCo/122//#testresult/e045fc0e51dd3e49","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","time":{"start":1622040430918,"stop":1622040430920,"duration":2}}]},"tags":[]},"source":"700596c2ddf4f250.json","parameterValues":[]}