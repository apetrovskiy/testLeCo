{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Product defects",
    "children" : [ {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]",
      "children" : [ {
        "name" : "candidates = 2,3,6,7, target = 8, returns 2,2,3,7",
        "uid" : "cff9a7d5a7c40f48",
        "parentUid" : "c8dc970e3084b322200660b8b93459a7",
        "status" : "failed",
        "time" : {
          "start" : 1621980508023,
          "stop" : 1621980508031,
          "duration" : 8
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "c8dc970e3084b322200660b8b93459a7"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]",
      "children" : [ {
        "name" : "candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5",
        "uid" : "fb9a3726c027be89",
        "parentUid" : "d6bb085e000a30b4c594de3ad9bd0168",
        "status" : "failed",
        "time" : {
          "start" : 1621980508037,
          "stop" : 1621980508039,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "d6bb085e000a30b4c594de3ad9bd0168"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
      "children" : [ {
        "name" : "candidates = 2, target = 1, returns ",
        "uid" : "160ede97e89f872",
        "parentUid" : "d6777d56dd4deacebae2eaffe25a910f",
        "status" : "failed",
        "time" : {
          "start" : 1621980508041,
          "stop" : 1621980508043,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "d6777d56dd4deacebae2eaffe25a910f"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
      "children" : [ {
        "name" : "candidates = 1, target = 1, returns 1",
        "uid" : "337f1542ffae1b38",
        "parentUid" : "18486bf4495adb834cbda85366ca81f6",
        "status" : "failed",
        "time" : {
          "start" : 1621980508044,
          "stop" : 1621980508046,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "18486bf4495adb834cbda85366ca81f6"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
      "children" : [ {
        "name" : "candidates = 1, target = 2, returns 1,1",
        "uid" : "9dea53e4b0a7f38b",
        "parentUid" : "6cf77b292b0cf43d0edd2bed6cc06149",
        "status" : "failed",
        "time" : {
          "start" : 1621980508048,
          "stop" : 1621980508049,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "6cf77b292b0cf43d0edd2bed6cc06149"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0",
      "children" : [ {
        "name" : "inputArray = {inputArray} returns {expectedResult}",
        "uid" : "bfc3f8ef451fdbdc",
        "parentUid" : "e1d94523ee7a5e0494ab47b09ca20494",
        "status" : "failed",
        "time" : {
          "start" : 1621980508512,
          "stop" : 1621980508514,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "e1d94523ee7a5e0494ab47b09ca20494"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0",
      "children" : [ {
        "name" : "inputArray = {inputArray} returns {expectedResult}",
        "uid" : "61f976c0583a9935",
        "parentUid" : "3fa104e949e4dff04b2821d628f7edd7",
        "status" : "failed",
        "time" : {
          "start" : 1621980508515,
          "stop" : 1621980508516,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "3fa104e949e4dff04b2821d628f7edd7"
    }, {
      "name" : "assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:6:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
      "children" : [ {
        "name" : "case 01",
        "uid" : "6736e625f4faf7a4",
        "parentUid" : "80ec54a5eb12547673125d53132c38c3",
        "status" : "failed",
        "time" : {
          "start" : 1621980508652,
          "stop" : 1621980508655,
          "duration" : 3
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "80ec54a5eb12547673125d53132c38c3"
    }, {
      "name" : "assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [1, 2]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 1, 2 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   1,\n                -   2,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:9:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
      "children" : [ {
        "name" : "case 02",
        "uid" : "dcf5e938bc1df0d4",
        "parentUid" : "d36619d941a99f6913d5ce83fabc086b",
        "status" : "failed",
        "time" : {
          "start" : 1621980508655,
          "stop" : 1621980508656,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "d36619d941a99f6913d5ce83fabc086b"
    }, {
      "name" : "assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:12:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
      "children" : [ {
        "name" : "case 03",
        "uid" : "a472ebf141550902",
        "parentUid" : "ba6673e5b21682426f2040c851338e02",
        "status" : "failed",
        "time" : {
          "start" : 1621980508656,
          "stop" : 1621980508657,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "ba6673e5b21682426f2040c851338e02"
    }, {
      "name" : "AssertionError: Lists differ: [[2, 2, 3], [7]] != []\n\nFirst list contains 2 additional elements.\nFirst extra element 0:\n[2, 2, 3]\n\n- [[2, 2, 3], [7]]\n+ []",
      "children" : [ {
        "name" : "test_1",
        "uid" : "ec6c0fb320a5e020",
        "parentUid" : "9c36c0d89f9478629a8668ff735ae4a1",
        "status" : "failed",
        "time" : {
          "start" : 1621980513056,
          "stop" : 1621980513057,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "9c36c0d89f9478629a8668ff735ae4a1"
    }, {
      "name" : "AssertionError: Lists differ: [[2, 2, 2, 2], [2, 3, 3], [3, 5]] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n[2, 2, 2, 2]\n\n- [[2, 2, 2, 2], [2, 3, 3], [3, 5]]\n+ []",
      "children" : [ {
        "name" : "test_2",
        "uid" : "477a5fc617b4417c",
        "parentUid" : "1b3f6a30bd56ce3366a2c0d71463b27d",
        "status" : "failed",
        "time" : {
          "start" : 1621980513088,
          "stop" : 1621980513089,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "1b3f6a30bd56ce3366a2c0d71463b27d"
    }, {
      "name" : "AssertionError: Lists differ: [[1]] != [[0]]\n\nFirst differing element 0:\n[1]\n[0]\n\n- [[1]]\n?   ^\n\n+ [[0]]\n?   ^",
      "children" : [ {
        "name" : "test_4",
        "uid" : "a7bc98339ba327fa",
        "parentUid" : "a8a7cd336e05f958baac176fc0cb66bf",
        "status" : "failed",
        "time" : {
          "start" : 1621980513094,
          "stop" : 1621980513094,
          "duration" : 0
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "a8a7cd336e05f958baac176fc0cb66bf"
    }, {
      "name" : "AssertionError: Lists differ: [[1, 1]] != [[0, 1]]\n\nFirst differing element 0:\n[1, 1]\n[0, 1]\n\n- [[1, 1]]\n?   ^\n\n+ [[0, 1]]\n?   ^",
      "children" : [ {
        "name" : "test_5",
        "uid" : "8667b5a8b502e2b",
        "parentUid" : "9e9e18b679ff66d0c9d4a05338b3055e",
        "status" : "failed",
        "time" : {
          "start" : 1621980513098,
          "stop" : 1621980513099,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "9e9e18b679ff66d0c9d4a05338b3055e"
    }, {
      "name" : "AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f014a545070>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f014a545070>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f014a545070>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f014a545070> = Solution()",
      "children" : [ {
        "name" : "test_degree_of_an_subarray[input_array0-2]",
        "uid" : "f7febf519b7f6ab8",
        "parentUid" : "81bd1cadb0c945d9b6f67e11faaf490b",
        "status" : "failed",
        "time" : {
          "start" : 1621980513138,
          "stop" : 1621980513139,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ "2", "[1, 2, 2, 3, 1]" ]
      } ],
      "uid" : "81bd1cadb0c945d9b6f67e11faaf490b"
    }, {
      "name" : "AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f014a5cf0d0>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f014a5cf0d0>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f014a5cf0d0>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f014a5cf0d0> = Solution()",
      "children" : [ {
        "name" : "test_degree_of_an_subarray[input_array1-6]",
        "uid" : "a2443f2b551c49bf",
        "parentUid" : "72b90a23595f3832283dbb6ca8d641e4",
        "status" : "failed",
        "time" : {
          "start" : 1621980513143,
          "stop" : 1621980513143,
          "duration" : 0
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ "6", "[1, 2, 2, 3, 1, 4, 2]" ]
      } ],
      "uid" : "72b90a23595f3832283dbb6ca8d641e4"
    }, {
      "name" : "AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One",
      "children" : [ {
        "name" : "test_integer_to_english_words[1-One]",
        "uid" : "230e81150a0e95b4",
        "parentUid" : "9123ab527d641dc38f1b3f28156694cf",
        "status" : "failed",
        "time" : {
          "start" : 1621980513208,
          "stop" : 1621980513208,
          "duration" : 0
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ "'One'", "1" ]
      } ],
      "uid" : "9123ab527d641dc38f1b3f28156694cf"
    }, {
      "name" : "expected: <2> but was: <0>",
      "children" : [ {
        "name" : "[1] [1, 2, 2, 3, 1], 2",
        "uid" : "17664c34be967f3d",
        "parentUid" : "1b76bbb71605dc05c40417bab1c64cee",
        "status" : "failed",
        "time" : {
          "start" : 1621980722689,
          "stop" : 1621980722776,
          "duration" : 87
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[1] inputArray=[1, 2, 2, 3, 1], expectedResult=2",
        "uid" : "d1d83dd933dff2cd",
        "parentUid" : "1b76bbb71605dc05c40417bab1c64cee",
        "status" : "failed",
        "time" : {
          "start" : 1621980723394,
          "stop" : 1621980723438,
          "duration" : 44
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[1] [1, 2, 2, 3, 1], 2",
        "uid" : "157c6ef826754519",
        "parentUid" : "1b76bbb71605dc05c40417bab1c64cee",
        "status" : "failed",
        "time" : {
          "start" : 1621980723415,
          "stop" : 1621980723422,
          "duration" : 7
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "1b76bbb71605dc05c40417bab1c64cee"
    }, {
      "name" : "expected: <6> but was: <0>",
      "children" : [ {
        "name" : "[2] [1, 2, 2, 3, 1, 4, 2], 6",
        "uid" : "d8524217c8cce85d",
        "parentUid" : "81358dd8b9856946968faa7abcb09861",
        "status" : "failed",
        "time" : {
          "start" : 1621980722841,
          "stop" : 1621980722847,
          "duration" : 6
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[2] [1, 2, 2, 3, 1, 4, 2], 6",
        "uid" : "5fadb4f24ef7914d",
        "parentUid" : "81358dd8b9856946968faa7abcb09861",
        "status" : "failed",
        "time" : {
          "start" : 1621980723444,
          "stop" : 1621980723445,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6",
        "uid" : "937f6afc690db272",
        "parentUid" : "81358dd8b9856946968faa7abcb09861",
        "status" : "failed",
        "time" : {
          "start" : 1621980723485,
          "stop" : 1621980723486,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "81358dd8b9856946968faa7abcb09861"
    }, {
      "name" : "expected: <1> but was: <-1>",
      "children" : [ {
        "name" : "[7] [-1], 1",
        "uid" : "709e7ce52d9273c0",
        "parentUid" : "695ea6ea5dee800d5d4f9590f68ac3d6",
        "status" : "failed",
        "time" : {
          "start" : 1621980723825,
          "stop" : 1621980723826,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[8] [-2, -1], 1",
        "uid" : "2832154e10f0761f",
        "parentUid" : "695ea6ea5dee800d5d4f9590f68ac3d6",
        "status" : "failed",
        "time" : {
          "start" : 1621980723843,
          "stop" : 1621980723844,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "695ea6ea5dee800d5d4f9590f68ac3d6"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}