{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","children":[{"name":"test Combination sum: candidates = 2,3,6,7, target = 8, returns 2,2,3,7","uid":"9d2712866f733775","parentUid":"c8dc970e3084b322200660b8b93459a7","status":"failed","time":{"start":1700277386974,"stop":1700277386982,"duration":8},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"c8dc970e3084b322200660b8b93459a7"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","children":[{"name":"test Combination sum: candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","uid":"ce3edb8f0911b928","parentUid":"d6bb085e000a30b4c594de3ad9bd0168","status":"failed","time":{"start":1700277386989,"stop":1700277386991,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6bb085e000a30b4c594de3ad9bd0168"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","children":[{"name":"test Combination sum: candidates = 2, target = 1, returns ","uid":"11f884f6e8daaf44","parentUid":"d6777d56dd4deacebae2eaffe25a910f","status":"failed","time":{"start":1700277386992,"stop":1700277386994,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6777d56dd4deacebae2eaffe25a910f"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"test Combination sum: candidates = 1, target = 1, returns 1","uid":"24a69194ff533824","parentUid":"18486bf4495adb834cbda85366ca81f6","status":"failed","time":{"start":1700277386995,"stop":1700277386996,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"18486bf4495adb834cbda85366ca81f6"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"test Combination sum: candidates = 1, target = 2, returns 1,1","uid":"f244c5be14a7ea78","parentUid":"6cf77b292b0cf43d0edd2bed6cc06149","status":"failed","time":{"start":1700277386997,"stop":1700277386999,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"6cf77b292b0cf43d0edd2bed6cc06149"},{"name":"ReferenceError: assert is not defined","children":[{"name":"case 01","uid":"bb36e5c8d22f64e1","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700277387041,"stop":1700277387042,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"case 03","uid":"6298ac6e07c4d690","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700277387043,"stop":1700277387043,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"case 02","uid":"d62beda04dcdd3c1","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700277387043,"stop":1700277387043,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"a9dc2694a3b8143090badc0acddfd14d"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0","children":[{"name":"test Degree of an array: inputArray = {inputArray} returns {expectedResult}","uid":"6b7d8203bfc74934","parentUid":"e1d94523ee7a5e0494ab47b09ca20494","status":"failed","time":{"start":1700277387348,"stop":1700277387353,"duration":5},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"e1d94523ee7a5e0494ab47b09ca20494"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0","children":[{"name":"test Degree of an array: inputArray = {inputArray} returns {expectedResult}","uid":"95887d38c58242b","parentUid":"3fa104e949e4dff04b2821d628f7edd7","status":"failed","time":{"start":1700277387359,"stop":1700277387360,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3fa104e949e4dff04b2821d628f7edd7"},{"children":[{"name":"Maximum Subarray","uid":"77f68716e8738890","parentUid":"666d1a31450af3ae8459f14f07f9a1b4","status":"failed","time":{"start":1700277397543,"stop":1700277397543,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":7,"retriesStatusChange":true,"parameters":[],"tags":[]}],"uid":"666d1a31450af3ae8459f14f07f9a1b4"},{"name":"AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7efc35750530>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7efc35750530>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7efc35750530>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7efc35750530> = Solution()","children":[{"name":"test Python","uid":"573605d7aea10d4a","parentUid":"42b05def7c9f5c93b943f070f7c8241b","status":"failed","time":{"start":1700277420341,"stop":1700277420341,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":["tag Python"]}],"uid":"42b05def7c9f5c93b943f070f7c8241b"},{"name":"AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7efc35749d30>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7efc35749d30>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7efc35749d30>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7efc35749d30> = Solution()","children":[{"name":"test Python","uid":"139724cd591c0e2d","parentUid":"5365d8407a9befd479284ef1b5f9b66c","status":"failed","time":{"start":1700277420344,"stop":1700277420345,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":["tag Python"]}],"uid":"5365d8407a9befd479284ef1b5f9b66c"},{"name":"AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One","children":[{"name":"test Python","uid":"3cfa80d99d8db6f5","parentUid":"9123ab527d641dc38f1b3f28156694cf","status":"failed","time":{"start":1700277420396,"stop":1700277420396,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["'One'","1"],"tags":["tag Python"]}],"uid":"9123ab527d641dc38f1b3f28156694cf"},{"name":"expected: <2> but was: <0>","children":[{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"3ff80120a138cd33","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700277557487,"stop":1700277557562,"duration":75},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"e02bb45522c0fbe5","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700277557703,"stop":1700277557712,"duration":9},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2","uid":"cf56c0daecc0c070","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700277557837,"stop":1700277557863,"duration":26},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":[]}],"uid":"1b76bbb71605dc05c40417bab1c64cee"},{"name":"expected: <6> but was: <0>","children":[{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"a49760cc4baba6f4","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700277557616,"stop":1700277557624,"duration":8},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"2a2b0455f0a29a14","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700277557739,"stop":1700277557741,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6","uid":"8c442b45c401ed08","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700277557897,"stop":1700277557899,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":[]}],"uid":"81358dd8b9856946968faa7abcb09861"},{"name":"expected: <1> but was: <-1>","children":[{"name":"test Maximum subarray [7] [-1], 1","uid":"7c188764a1cae7a9","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700277558305,"stop":1700277558326,"duration":21},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-1]","1"],"tags":[]},{"name":"test Maximum subarray [8] [-2, -1], 1","uid":"9804e9d0fe5a7941","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700277558358,"stop":1700277558369,"duration":11},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-2, -1]","1"],"tags":[]}],"uid":"695ea6ea5dee800d5d4f9590f68ac3d6"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"AttributeError: 'SolutionTest' object has no attribute 'assertEquals'. Did you mean: 'assertEqual'?","children":[{"name":"test Combination sum 01","uid":"4aecf177641e58eb","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700277420243,"stop":1700277420244,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 02","uid":"e352c49c5eee357b","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700277420275,"stop":1700277420275,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 03","uid":"227541d7af3c076c","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700277420284,"stop":1700277420284,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 04","uid":"1fafbe9cb1eac60b","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700277420294,"stop":1700277420294,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 05","uid":"755e04380c4b3921","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700277420303,"stop":1700277420303,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]}],"uid":"8b28b79d3c747cdf21e370fc8cdc4919"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}