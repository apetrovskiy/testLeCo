"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","4","","canCompleteCircuit(1, 3) should equal 3","","canCompleteCircuit(1, 3) should equal 3","test Gas station: gas = 1,2,3,4,5, cost = 3,4,5,1,2, returns 3","test Gas station: gas = 1,2,3,4,5, cost = 3,4,5,1,2, returns 3","test Gas station"
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","0","","suite C#","","GasStationTest","TestGasStation","test Gas station",""
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","0","","suite C#","","ClimbingStairsTest","ShouldCalculateStairs","test Climbing stairs",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","9","","suite Java","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","test Climbing stairs [5] 5, 8",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","3","","suite Java","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","test Maximum subarray [4] [5, -3, 6, -7, 6], 8",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","2","","suite Kotlin","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","test Maximum subarray [2] [1], 1",""
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","0","","suite C#","","GasStationTest","TestGasStation","test Gas station",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","2","","maxSubArray([ -2, 1, -3, 4, -1, 2, 1, -5, 4, [length]: 9 ]) should equal 6","","maxSubArray([ -2, 1, -3, 4, -1, 2, 1, -5, 4, [length]: 9 ]) should equal 6","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray"
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","1","","combinationSum([ 1, [length]: 1 ], 2) should equal 1","","combinationSum([ 1, [length]: 1 ], 2) should equal 1","test Combination sum: candidates = 1, target = 2, returns 1,1","test Combination sum: candidates = 1, target = 2, returns 1,1","test Combination sum"
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","1","","suite C#","","ClimbingStairsTest","ShouldCalculateStairs","test Climbing stairs",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","25","","suite Java","","problems.medium.GasStation.GasStationTest","TestGasStation","test Gas station 01 [3] [7, 1, 0, 11, 4], [5, 9, 1, 2, 5], 3",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","6","","suite Java","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","test Climbing stairs [3] 3, 3",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","15","","suite Java","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","test Maximum subarray [6] [-2, -3, 4, -1, -2, 1, 5, -3], 7",""
"passed","Sat Nov 18 01:19:04 GMT 2023","Sat Nov 18 01:19:04 GMT 2023","1","","climbStairs(2) should equal 2","","climbStairs(2) should equal 2","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs"
"failed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","18","","suite Scala","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayScalaTest","shouldCalculateDegree","test Degree of an array [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","maxSubArray([ 5, -3, 6, -7, 6, [length]: 5 ]) should equal 8","","maxSubArray([ 5, -3, 6, -7, 6, [length]: 5 ]) should equal 8","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray"
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","11","","suite Java","","problems.medium.GasStation.GasStationTest","TestGasStationKt","test Gas station 02 [3] [7, 1, 0, 11, 4], [5, 9, 1, 2, 5], 3",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","23","","suite Java","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","test Maximum subarray [7] [-1], -1",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","6","","suite Kotlin","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","test Maximum subarray [3] [5, 4, -1, 7, 8], 23",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","5","","suite Java","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","test Climbing stairs [2] 2, 2",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","maxSubArray([ -1, [length]: 1 ]) should equal -1","","maxSubArray([ -1, [length]: 1 ]) should equal -1","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray"
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","1","","findShortestSubArray([ 1, 2, 2, 3, 1, 4, 2, [length]: 7 ]) should equal 6","","findShortestSubArray([ 1, 2, 2, 3, 1, 4, 2, [length]: 7 ]) should equal 6","test Degree of an array: inputArray = {inputArray} returns {expectedResult}","test Degree of an array: inputArray = {inputArray} returns {expectedResult}","test Degree of an array"
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","2","","suite Kotlin","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","test Maximum subarray [6] [-2, -3, 4, -1, -2, 1, 5, -3], 7",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","112","","suite Java","","challenges.c20201001to20201007.NumberOfRecentCalls.NumberOfRecentCallsTest","testNumberOfRecentCalls","test Number of recent calls",""
"passed","Sat Nov 18 01:19:04 GMT 2023","Sat Nov 18 01:19:04 GMT 2023","1","","climbStairs(4) should equal 5","","climbStairs(4) should equal 5","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs"
"failed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","3","","suite Kotlin","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","test Maximum subarray [8] [-2, -1], 1",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","10","","suite Java","","problems.medium.GasStation.GasStationTest","TestGasStation","test Gas station 01 [1] [1, 2, 3, 4, 5], [3, 4, 5, 1, 2], 3",""
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","8","","suite Scala","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","test Climbing stairs [5] input=5, expectedResult=8",""
"passed","Sat Nov 18 01:19:04 GMT 2023","Sat Nov 18 01:19:04 GMT 2023","0","","climbStairs(5) should equal 8","","climbStairs(5) should equal 8","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs"
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","3","","suite Kotlin","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","test Maximum subarray [1] [-2, 1, -3, 4, -1, 2, 1, -5, 4], 6",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","265","","suite Java","","problems.medium.GasStation.GasStationTest","TestGasStationKt","test Gas station 02 [1] [1, 2, 3, 4, 5], [3, 4, 5, 1, 2], 3",""
"passed","Sat Nov 18 01:19:04 GMT 2023","Sat Nov 18 01:19:04 GMT 2023","2","","climbStairs(1) should equal 1","","climbStairs(1) should equal 1","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs"
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","maxSubArray([ -2, -3, 4, -1, -2, 1, 5, -3, [length]: 8 ]) should equal 7","","maxSubArray([ -2, -3, 4, -1, -2, 1, 5, -3, [length]: 8 ]) should equal 7","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray"
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","2","","suite Scala","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","test Maximum subarray [6] inputArray=[-2, -3, 4, -1, -2, 1, 5, -3], expectedResult=7",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","137","","suite Java","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","test Maximum subarray [1] [-2, 1, -3, 4, -1, 2, 1, -5, 4], 6",""
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","5","","findShortestSubArray([ 1, 2, 2, 3, 1, [length]: 5 ]) should equal 2","","findShortestSubArray([ 1, 2, 2, 3, 1, [length]: 5 ]) should equal 2","test Degree of an array: inputArray = {inputArray} returns {expectedResult}","test Degree of an array: inputArray = {inputArray} returns {expectedResult}","test Degree of an array"
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","8","","combinationSum([ 2, 3, 6, 7, [length]: 4 ], 8) should equal 2","","combinationSum([ 2, 3, 6, 7, [length]: 4 ], 8) should equal 2","test Combination sum: candidates = 2,3,6,7, target = 8, returns 2,2,3,7","test Combination sum: candidates = 2,3,6,7, target = 8, returns 2,2,3,7","test Combination sum"
"failed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","17","","suite Scala","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayScalaTest","shouldCalculateDegree","test Degree of an array [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","maxSubArray([ 1, [length]: 1 ]) should equal 1","","maxSubArray([ 1, [length]: 1 ]) should equal 1","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray"
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","15","","suite Kotlin","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","test Climbing stairs [1] 1, 1",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","10","","suite Kotlin","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","test Climbing stairs [3] 3, 3",""
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","1","","Two Sum","","Two Sum","case 03","case 03","test Two sum 03"
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","0","","suite C#","","ClimbingStairsTest","ShouldCalculateStairs","test Climbing stairs",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","916","","suite Scala","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","test Climbing stairs [3] input=3, expectedResult=3",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","12","","suite Java","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","test Maximum subarray [2] [1], 1",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","9","","suite Java","","problems.medium.GasStation.GasStationTest","TestGasStationKt","test Gas station 02 [2] [2, 3, 4], [3, 4, 3], -1",""
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","2","","suite Scala","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","test Maximum subarray [8] inputArray=[-2, -1], expectedResult=-1",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","1","","suite Kotlin","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","test Climbing stairs [5] 5, 8",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","maxSubArray([ 6, -7, 6, -3, 5, [length]: 5 ]) should equal 8","","maxSubArray([ 6, -7, 6, -3, 5, [length]: 5 ]) should equal 8","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray"
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","10","","suite Scala","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","test Climbing stairs [4] input=4, expectedResult=5",""
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","11","","suite Scala","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","test Maximum subarray [7] inputArray=[-1], expectedResult=-1",""
"failed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","20","","suite Kotlin","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayKtTest","testDegreeOfAnArray","test Degree of an array [1] [1, 2, 2, 3, 1], 2",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","maxSubArray([ 5, 4, -1, 7, 8, [length]: 5 ]) should equal 23","","maxSubArray([ 5, 4, -1, 7, 8, [length]: 5 ]) should equal 23","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray"
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","1","","combinationSum([ 2, [length]: 1 ], 1) should equal NaN","","combinationSum([ 2, [length]: 1 ], 1) should equal NaN","test Combination sum: candidates = 2, target = 1, returns ","test Combination sum: candidates = 2, target = 1, returns ","test Combination sum"
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","5","","suite C#","","GasStationTest","TestGasStation","test Gas station",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","3","","suite Java","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","test Maximum subarray [5] [6, -7, 6, -3, 5], 8",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","2","","suite Scala","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","test Climbing stairs [2] input=2, expectedResult=2",""
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","40","","suite Scala","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","test Maximum subarray [1] inputArray=[-2, 1, -3, 4, -1, 2, 1, -5, 4], expectedResult=6",""
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","9","","suite C#","","RecentCounterTest","PingTest","test Recent counter",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","10","","suite Kotlin","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","test Climbing stairs [4] 4, 5",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","9","","suite Java","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","test Maximum subarray [8] [-2, -1], -1",""
"failed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","10","","suite Kotlin","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayKtTest","testDegreeOfAnArray","test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6",""
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","2","","Two Sum","","Two Sum","case 01","case 01","test Two sum 01"
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","155","","suite Java","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","test Climbing stairs [1] 1, 1",""
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","0","","suite C#","","ClimbingStairsTest","ShouldCalculateStairs","test Climbing stairs",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","10","","suite Kotlin","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","test Climbing stairs [2] 2, 2",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","6","","suite Kotlin","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","test Maximum subarray [5] [6, -7, 6, -3, 5], 8",""
"passed","Sat Nov 18 01:19:04 GMT 2023","Sat Nov 18 01:19:04 GMT 2023","0","","climbStairs(3) should equal 3","","climbStairs(3) should equal 3","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs: input = {input}, returns = {expectedResult}","test Climbing stairs"
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","14","","suite Scala","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","test Climbing stairs [1] input=1, expectedResult=1",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","931","","suite Scala","","problems.easy.MajorityElement.MajorityElementTest","shouldCalculateMajorityElement","test Majority element [1] input=[3, 2, 3], expectedResult=3",""
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","1","","combinationSum([ 2, 3, 5, [length]: 3 ], 8) should equal 2","","combinationSum([ 2, 3, 5, [length]: 3 ], 8) should equal 2","test Combination sum: candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","test Combination sum: candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","test Combination sum"
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","2","","suite Scala","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","test Maximum subarray [2] inputArray=[1], expectedResult=1",""
"passed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","2","","suite Kotlin","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","test Maximum subarray [4] [5, -3, 6, -7, 6], 8",""
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","Two Sum","","Two Sum","case 02","case 02","test Two sum 02"
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","4","","maxSubArray([ -2, -1, [length]: 2 ]) should equal -1","","maxSubArray([ -2, -1, [length]: 2 ]) should equal -1","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray: inputArray = {inputArray}, returns {expectedResult}","test Maximum subarray"
"failed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","1","","combinationSum([ 1, [length]: 1 ], 1) should equal 1","","combinationSum([ 1, [length]: 1 ], 1) should equal 1","test Combination sum: candidates = 1, target = 1, returns 1","test Combination sum: candidates = 1, target = 1, returns 1","test Combination sum"
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","4","","suite Scala","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","test Maximum subarray [3] inputArray=[5, 4, -1, 7, 8], expectedResult=23",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","canCompleteCircuit(7, 5) should equal 3","","canCompleteCircuit(7, 5) should equal 3","test Gas station: gas = 7,1,0,11,4, cost = 5,9,1,2,5, returns 3","test Gas station: gas = 7,1,0,11,4, cost = 5,9,1,2,5, returns 3","test Gas station"
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","5","","suite Scala","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","test Maximum subarray [4] inputArray=[5, -3, 6, -7, 6], expectedResult=8",""
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","2","","suite Scala","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","test Maximum subarray [5] inputArray=[6, -7, 6, -3, 5], expectedResult=8",""
"passed","Sat Nov 18 01:21:47 GMT 2023","Sat Nov 18 01:21:47 GMT 2023","3","","suite Scala","","problems.easy.MajorityElement.MajorityElementTest","shouldCalculateMajorityElement","test Majority element [2] input=[2, 2, 1, 1, 1, 2, 2], expectedResult=2",""
"failed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","31","","suite Java","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest","shouldCalculateDegree","test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","3","","majorityElement([ 3, 2, 3, [length]: 3 ]) should equal to 3","","majorityElement([ 3, 2, 3, [length]: 3 ]) should equal to 3","test Majority element: input = {inputArray}, returns {expectedResult}","test Majority element: input = {inputArray}, returns {expectedResult}","test Majority element"
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","6","","suite C#","","SomeTest","Test","test Some",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","0","","canCompleteCircuit(2, 3) should equal -1","","canCompleteCircuit(2, 3) should equal -1","test Gas station: gas = 2,3,4, cost = 3,4,3, returns -1","test Gas station: gas = 2,3,4, cost = 3,4,3, returns -1","test Gas station"
"failed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","93","","suite Java","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest","shouldCalculateDegree","test Degree of an array [1] [1, 2, 2, 3, 1], 2",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","2","","suite Java","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","test Maximum subarray [3] [5, 4, -1, 7, 8], 23",""
"skipped","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","1","","suite Java","","challenges.c20210101to20210107.CheckArrayFormationThroughConcatenation.CheckArrayFormationThroughConcatenationTest","shouldCheck","test Check array formation through concatenation",""
"passed","Sat Nov 18 01:19:35 GMT 2023","Sat Nov 18 01:19:35 GMT 2023","0","","suite C#","","ClimbingStairsTest","ShouldCalculateStairs","test Climbing stairs",""
"failed","Sat Nov 18 01:21:46 GMT 2023","Sat Nov 18 01:21:46 GMT 2023","9","","suite Kotlin","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","test Maximum subarray [7] [-1], 1",""
"passed","Sat Nov 18 01:19:03 GMT 2023","Sat Nov 18 01:19:03 GMT 2023","1","","majorityElement([ 2, 2, 1, 1, 1, 2, 2, [length]: 7 ]) should equal to 2","","majorityElement([ 2, 2, 1, 1, 1, 2, 2, [length]: 7 ]) should equal to 2","test Majority element: input = {inputArray}, returns {expectedResult}","test Majority element: input = {inputArray}, returns {expectedResult}","test Majority element"
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","4","","suite Java","","problems.medium.GasStation.GasStationTest","TestGasStation","test Gas station 01 [2] [2, 3, 4], [3, 4, 3], -1",""
"passed","Sat Nov 18 01:21:45 GMT 2023","Sat Nov 18 01:21:45 GMT 2023","20","","suite Java","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","test Climbing stairs [4] 4, 5",""
