{"uid":"506d6cf1876dd6b6","name":"shouldCalculateMaximumSubarray(int[], int) [7] [-1], 1","fullName":"problems.easy.MaximumSubarray.MaximumSubarrayKtTest.shouldCalculateMaximumSubarray","historyId":"4ead02b6a60b45d4d5cab4799d98b226","time":{"start":1700256376426,"stop":1700256376464,"duration":38},"description":"","status":"failed","statusMessage":"expected: <1> but was: <-1>","statusTrace":"org.opentest4j.AssertionFailedError: expected: <1> but was: <-1>\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:528)\n\tat problems.easy.MaximumSubarray.MaximumSubarrayKtTest.shouldCalculateMaximumSubarray(MaximumSubarrayKtTest.kt:14)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat io.qameta.allure.junit5.AllureJunit5.interceptTestTemplateMethod(AllureJunit5.java:59)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.submit(ForkJoinPoolHierarchicalTestExecutorService.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:146)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:problems.easy.MaximumSubarray.MaximumSubarrayKtTest]/[test-template:shouldCalculateMaximumSubarray(%5BI, int)]/[test-template-invocation:#7]"},{"name":"host","value":"fv-az1435-256"},{"name":"thread","value":"3163@fv-az1435-256.ForkJoinPool-1-worker-1(18)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"problems.easy.MaximumSubarray.MaximumSubarrayKtTest"},{"name":"testClass","value":"problems.easy.MaximumSubarray.MaximumSubarrayKtTest"},{"name":"testMethod","value":"shouldCalculateMaximumSubarray"},{"name":"suite","value":"problems.easy.MaximumSubarray.MaximumSubarrayKtTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"[-1]"},{"name":"arg1","value":"1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":40},"items":[{"uid":"759401b17e664532","reportUrl":"https://apetrovskiy.github.io/testLeCo/174//#testresult/759401b17e664532","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1700256031996,"stop":1700256032020,"duration":24}},{"uid":"ae34254063b3ca94","reportUrl":"https://apetrovskiy.github.io/testLeCo/173//#testresult/ae34254063b3ca94","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1700246293463,"stop":1700246293495,"duration":32}},{"uid":"9ab40136d89abbfa","reportUrl":"https://apetrovskiy.github.io/testLeCo/172//#testresult/9ab40136d89abbfa","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1700245989811,"stop":1700245989866,"duration":55}},{"uid":"884ddffd15f6ef0a","reportUrl":"https://apetrovskiy.github.io/testLeCo/170//#testresult/884ddffd15f6ef0a","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1699397412526,"stop":1699397412564,"duration":38}},{"uid":"ccb1dda2f69d92fb","reportUrl":"https://apetrovskiy.github.io/testLeCo/169//#testresult/ccb1dda2f69d92fb","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1695063927610,"stop":1695063927613,"duration":3}},{"uid":"94d64a6e67531885","reportUrl":"https://apetrovskiy.github.io/testLeCo/168//#testresult/94d64a6e67531885","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1690238651467,"stop":1690238651474,"duration":7}},{"uid":"3eb05cf7635a8b9b","reportUrl":"https://apetrovskiy.github.io/testLeCo/167//#testresult/3eb05cf7635a8b9b","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1690236717065,"stop":1690236717069,"duration":4}},{"uid":"8f424246be9c50ff","reportUrl":"https://apetrovskiy.github.io/testLeCo/166//#testresult/8f424246be9c50ff","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1690232588529,"stop":1690232588534,"duration":5}},{"uid":"e823487f8b268caa","reportUrl":"https://apetrovskiy.github.io/testLeCo/165//#testresult/e823487f8b268caa","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1690231652343,"stop":1690231652345,"duration":2}},{"uid":"6ae610e1435fcf66","reportUrl":"https://apetrovskiy.github.io/testLeCo/164//#testresult/6ae610e1435fcf66","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1690230217532,"stop":1690230217535,"duration":3}},{"uid":"59535177321c86e7","reportUrl":"https://apetrovskiy.github.io/testLeCo/163//#testresult/59535177321c86e7","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1690222257503,"stop":1690222257505,"duration":2}},{"uid":"f5fa4a76601e57f3","reportUrl":"https://apetrovskiy.github.io/testLeCo/162//#testresult/f5fa4a76601e57f3","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1690198417633,"stop":1690198417643,"duration":10}},{"uid":"376e851acd5b540","reportUrl":"https://apetrovskiy.github.io/testLeCo/161//#testresult/376e851acd5b540","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1689530155375,"stop":1689530155377,"duration":2}},{"uid":"fffab2d8e9830e13","reportUrl":"https://apetrovskiy.github.io/testLeCo/160//#testresult/fffab2d8e9830e13","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1689528373518,"stop":1689528373521,"duration":3}},{"uid":"16298e5d50377531","reportUrl":"https://apetrovskiy.github.io/testLeCo/158//#testresult/16298e5d50377531","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1689519700869,"stop":1689519700880,"duration":11}},{"uid":"bcb75bc2ab83b9a2","reportUrl":"https://apetrovskiy.github.io/testLeCo/157//#testresult/bcb75bc2ab83b9a2","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1689518904129,"stop":1689518904132,"duration":3}},{"uid":"8352b9e2f080431c","reportUrl":"https://apetrovskiy.github.io/testLeCo/156//#testresult/8352b9e2f080431c","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1689518207018,"stop":1689518207022,"duration":4}},{"uid":"af5c79cdc634d677","reportUrl":"https://apetrovskiy.github.io/testLeCo/155//#testresult/af5c79cdc634d677","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1689514868182,"stop":1689514868188,"duration":6}},{"uid":"d7ec851030e4262f","reportUrl":"https://apetrovskiy.github.io/testLeCo/154//#testresult/d7ec851030e4262f","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1688149215711,"stop":1688149215715,"duration":4}},{"uid":"d951f8b693f4883b","reportUrl":"https://apetrovskiy.github.io/testLeCo/153//#testresult/d951f8b693f4883b","status":"failed","statusDetails":"expected: <1> but was: <-1>","time":{"start":1688147139577,"stop":1688147139588,"duration":11}}]},"tags":[]},"source":"506d6cf1876dd6b6.json","parameterValues":["[-1]","1"]}