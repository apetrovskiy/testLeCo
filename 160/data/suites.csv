"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","8","","","","ClimbingStairsTest","ShouldCalculateStairs","ShouldCalculateStairs(1,1)",""
"failed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.hard.IntegerToEnglishWords","test_integer_to_english_words","","","","test_integer_to_english_words[1-One]",""
"failed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.problems.easy.DegreeOfAnArray","test_degree_of_an_array","","","","test_degree_of_an_subarray[input_array1-6]",""
"failed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","141","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest","shouldCalculateDegree","shouldCalculateDegree(int[], int) [1] [1, 2, 2, 3, 1], 2",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","4","","problems.easy.MaximumSubarray.MaximumSubarrayTest","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","shouldCalculate(int[], int) [3] [5, 4, -1, 7, 8], 23",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","2","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [2] [1], 1",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","0","","canCompleteCircuit(2, 3) should equal -1","","canCompleteCircuit(2, 3) should equal -1","gas = 2,3,4, cost = 3,4,3, returns -1","gas = 2,3,4, cost = 3,4,3, returns -1",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","345","","problems.easy.MajorityElement.MajorityElementTest","","problems.easy.MajorityElement.MajorityElementTest","shouldCalculateMajorityElement","shouldCalculateMajorityElement(int[], int) [1] input=[3, 2, 3], expectedResult=3",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.IsSubsequence","test_is_subsequence","","","","test_is_subsequence[abc-ahbgdc-True]",""
"failed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20201001_20201007.CombinationSum","test_combination_sum","SolutionTest","","","test_5",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.hard.IntegerToEnglishWords","test_integer_to_english_words","","","","test_integer_to_english_words[0-Zero]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[1000-M]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MaximumSubarray","test_maximum_subarray","","","","test_maximum_subarray[input_array4-8]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.ClimbingStairs","test_climbing_stairs","","","","test_climbing_stairs[5-8]",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20210101_20210107.CheckArrayFormationThroughConcatenation","test_check_array_formation_through_concatenation","","","","test_check_array_formation_through_concatenation[input_array0-pieces0-True]",""
"passed","Sun Jul 16 17:22:30 GMT 2023","Sun Jul 16 17:22:30 GMT 2023","0","","climbStairs(3) should equal 3","","climbStairs(3) should equal 3","input = {input}, returns = {expectedResult}","input = {input}, returns = {expectedResult}",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20201001_20201007.CombinationSum","test_combination_sum","SolutionTest","","","test_3",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","2","","problems.easy.ClimbingStairs.ClimbingStairsTest","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","testClimbingStairs(int, int) [5] 5, 8",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","2","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","testClimbingStairs(int, int) [2] input=2, expectedResult=2",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","1","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [2] inputArray=[1], expectedResult=1",""
"passed","Sun Jul 16 17:22:30 GMT 2023","Sun Jul 16 17:22:30 GMT 2023","2","","majorityElement([ 3, 2, 3, [length]: 3 ]) should equal to 3","","majorityElement([ 3, 2, 3, [length]: 3 ]) should equal to 3","input = {inputArray}, returns {expectedResult}","input = {inputArray}, returns {expectedResult}",""
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","4","","","","GasStationTest","TestGasStation","TestGasStation([1, 2, 3, 4, 5],[3, 4, 5, 1, 2],3)",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","2","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","testClimbingStairs(int, int) [4] 4, 5",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","1","","maxSubArray([ 5, 4, -1, 7, 8, [length]: 5 ]) should equal 23","","maxSubArray([ 5, 4, -1, 7, 8, [length]: 5 ]) should equal 23","inputArray = {inputArray}, returns {expectedResult}","inputArray = {inputArray}, returns {expectedResult}",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.TwoSum","test_two_sum","","","","test_two_sum[nums2-6-expected_result2]",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20210101_20210107.CheckArrayFormationThroughConcatenation","test_check_array_formation_through_concatenation","","","","test_check_array_formation_through_concatenation[input_array4-pieces4-False]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MaximumSubarray","test_maximum_subarray","","","","test_maximum_subarray[input_array7--1]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.RomanToInteger","test_roman_to_integer","","","","test_roman_to_integer[MMMDCCLXV-3765]",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.hard.MaximumPerformanceOfATeam","test_maximum_performance_of_a_team","","","","test_max_performance_of_a_team[num_of_eng0-speed0-efficiency0-team_size0-expected_result0]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","7","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","testClimbingStairs(int, int) [5] 5, 8",""
"failed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","4","","findShortestSubArray([ 1, 2, 2, 3, 1, [length]: 5 ]) should equal 2","","findShortestSubArray([ 1, 2, 2, 3, 1, [length]: 5 ]) should equal 2","inputArray = {inputArray} returns {expectedResult}","inputArray = {inputArray} returns {expectedResult}",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","4","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","testClimbingStairs(int, int) [1] 1, 1",""
"skipped","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","1","","challenges.c20210101to20210107.CheckArrayFormationThroughConcatenation.CheckArrayFormationThroughConcatenationTest","","challenges.c20210101to20210107.CheckArrayFormationThroughConcatenation.CheckArrayFormationThroughConcatenationTest","shouldCheck","shouldCheck(int[], int[][], boolean)",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","0","","maxSubArray([ -1, [length]: 1 ]) should equal -1","","maxSubArray([ -1, [length]: 1 ]) should equal -1","inputArray = {inputArray}, returns {expectedResult}","inputArray = {inputArray}, returns {expectedResult}",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MaximumSubarray","test_maximum_subarray","","","","test_maximum_subarray[input_array0-6]",""
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","0","","","","ClimbingStairsTest","ShouldCalculateStairs","ShouldCalculateStairs(5,8)",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20210101_20210107.CheckArrayFormationThroughConcatenation","test_check_array_formation_through_concatenation","","","","test_check_array_formation_through_concatenation[input_array2-pieces2-False]",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","14","","problems.easy.MajorityElement.MajorityElementTest","","problems.easy.MajorityElement.MajorityElementTest","shouldCalculateMajorityElement","shouldCalculateMajorityElement(int[], int) [2] input=[2, 2, 1, 1, 1, 2, 2], expectedResult=2",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MajorityElement","test_majority_element","","","","test_majority_element[input_array1-2]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","10","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [5] [6, -7, 6, -3, 5], 8",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20210101_20210107.CheckArrayFormationThroughConcatenation","test_check_array_formation_through_concatenation","","","","test_check_array_formation_through_concatenation[input_array3-pieces3-True]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","2","","problems.medium.GasStation.GasStationTest","","problems.medium.GasStation.GasStationTest","TestGasStation","TestGasStation(int[], int[], int) [2] [2, 3, 4], [3, 4, 3], -1",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","14","","problems.medium.GasStation.GasStationTest","","problems.medium.GasStation.GasStationTest","TestGasStation","TestGasStation(int[], int[], int) [3] [7, 1, 0, 11, 4], [5, 9, 1, 2, 5], 3",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20210115_20210121.FindTheMostCompetitiveSubsequence","test_find_the_most_competitive_subsequence","","","","test_most_competitive[nums0-2-expected_result0]",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20210101_20210107.CheckArrayFormationThroughConcatenation","test_check_array_formation_through_concatenation","","","","test_check_array_formation_through_concatenation[input_array1-pieces1-True]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.ClimbingStairs","test_climbing_stairs","","","","test_climbing_stairs[1-1]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.ContainsDuplicate","test_contains_duplicate","","","","test_contains_duplicate[input0-True]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.medium.GasStation","test_gas_station","","","","test_gas_station[gas0-cost0-3]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.medium.GasStation","test_gas_station","","","","test_gas_station[gas1-cost1--1]",""
"failed","Sun Jul 16 17:22:28 GMT 2023","Sun Jul 16 17:22:28 GMT 2023","1","","combinationSum([ 1, [length]: 1 ], 1) should equal 1","","combinationSum([ 1, [length]: 1 ], 1) should equal 1","candidates = 1, target = 1, returns 1","candidates = 1, target = 1, returns 1",""
"passed","Sun Jul 16 17:22:30 GMT 2023","Sun Jul 16 17:22:30 GMT 2023","0","","majorityElement([ 2, 2, 1, 1, 1, 2, 2, [length]: 7 ]) should equal to 2","","majorityElement([ 2, 2, 1, 1, 1, 2, 2, [length]: 7 ]) should equal to 2","input = {inputArray}, returns {expectedResult}","input = {inputArray}, returns {expectedResult}",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","1","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [5] inputArray=[6, -7, 6, -3, 5], expectedResult=8",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[1994-MCMXCIV]",""
"failed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","8","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayKtTest","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayKtTest","testDegreeOfAnArray","testDegreeOfAnArray(int[], int) [1] [1, 2, 2, 3, 1], 2",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.RomanToInteger","test_roman_to_integer","","","","test_roman_to_integer[-0]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[3999-MMMCMXCIX]",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","2","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","testClimbingStairs(int, int) [4] input=4, expectedResult=5",""
"passed","Sun Jul 16 17:22:30 GMT 2023","Sun Jul 16 17:22:30 GMT 2023","0","","climbStairs(5) should equal 8","","climbStairs(5) should equal 8","input = {input}, returns = {expectedResult}","input = {input}, returns = {expectedResult}",""
"passed","Sun Jul 16 17:22:30 GMT 2023","Sun Jul 16 17:22:30 GMT 2023","2","","climbStairs(1) should equal 1","","climbStairs(1) should equal 1","input = {input}, returns = {expectedResult}","input = {input}, returns = {expectedResult}",""
"failed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","1","","Two Sum","","Two Sum","case 02","case 02",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.TwoSum","test_two_sum","","","","test_two_sum[nums1-6-expected_result1]",""
"failed","Sun Jul 16 17:22:28 GMT 2023","Sun Jul 16 17:22:28 GMT 2023","7","","combinationSum([ 2, 3, 6, 7, [length]: 4 ], 8) should equal 2","","combinationSum([ 2, 3, 6, 7, [length]: 4 ], 8) should equal 2","candidates = 2,3,6,7, target = 8, returns 2,2,3,7","candidates = 2,3,6,7, target = 8, returns 2,2,3,7",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.ContainsDuplicate","test_contains_duplicate","","","","test_contains_duplicate[input2-True]",""
"failed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","7","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [8] [-2, -1], 1",""
"failed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.DegreeOfAnArray","test_degree_of_an_array","","","","test_degree_of_an_subarray[input_array0-2]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","2","","problems.easy.MaximumSubarray.MaximumSubarrayTest","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","shouldCalculate(int[], int) [8] [-2, -1], -1",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MaximumSubarray","test_maximum_subarray","","","","test_maximum_subarray[input_array2-23]",""
"failed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","1","","findShortestSubArray([ 1, 2, 2, 3, 1, 4, 2, [length]: 7 ]) should equal 6","","findShortestSubArray([ 1, 2, 2, 3, 1, 4, 2, [length]: 7 ]) should equal 6","inputArray = {inputArray} returns {expectedResult}","inputArray = {inputArray} returns {expectedResult}",""
"failed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","1","","Two Sum","","Two Sum","case 03","case 03",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.RomanToInteger","test_roman_to_integer","","","","test_roman_to_integer[MCMXCIV-1994]",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","0","","canCompleteCircuit(7, 5) should equal 3","","canCompleteCircuit(7, 5) should equal 3","gas = 7,1,0,11,4, cost = 5,9,1,2,5, returns 3","gas = 7,1,0,11,4, cost = 5,9,1,2,5, returns 3",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","2","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [7] inputArray=[-1], expectedResult=-1",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.IsSubsequence","test_is_subsequence","","","","test_is_subsequence[axc-ahbgdc-False]",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","4","","problems.easy.ClimbingStairs.ClimbingStairsTest","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","testClimbingStairs(int, int) [3] 3, 3",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","4","","problems.easy.ClimbingStairs.ClimbingStairsTest","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","testClimbingStairs(int, int) [4] 4, 5",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","4","","problems.easy.ClimbingStairs.ClimbingStairsTest","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","testClimbingStairs(int, int) [2] 2, 2",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[1-I]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","2","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","testClimbingStairs(int, int) [3] 3, 3",""
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","0","","","","ClimbingStairsTest","ShouldCalculateStairs","ShouldCalculateStairs(4,5)",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[3-III]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[0-]",""
"failed","Sun Jul 16 17:22:28 GMT 2023","Sun Jul 16 17:22:28 GMT 2023","1","","combinationSum([ 2, [length]: 1 ], 1) should equal NaN","","combinationSum([ 2, [length]: 1 ], 1) should equal NaN","candidates = 2, target = 1, returns ","candidates = 2, target = 1, returns ",""
"failed","Sun Jul 16 17:22:28 GMT 2023","Sun Jul 16 17:22:28 GMT 2023","1","","combinationSum([ 1, [length]: 1 ], 2) should equal 1","","combinationSum([ 1, [length]: 1 ], 2) should equal 1","candidates = 1, target = 2, returns 1,1","candidates = 1, target = 2, returns 1,1",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","520","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","testClimbingStairs(int, int) [3] input=3, expectedResult=3",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.RomanToInteger","test_roman_to_integer","","","","test_roman_to_integer[IX-9]",""
"failed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.challenges.c20201001_20201007.CombinationSum","test_combination_sum","SolutionTest","","","test_2",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.RomanToInteger","test_roman_to_integer","","","","test_roman_to_integer[LVIII-58]",""
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","1","","","","GasStationTest","TestGasStation","TestGasStation([7, 1, 0, 11, 4],[5, 9, 1, 2, 5],3)",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","36","","problems.medium.GasStation.GasStationTest","","problems.medium.GasStation.GasStationTest","TestGasStation","TestGasStation(int[], int[], int) [1] [1, 2, 3, 4, 5], [3, 4, 5, 1, 2], 3",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.problems.medium.GasStation","test_gas_station","","","","test_gas_station[gas2-cost2-3]",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","2","","maxSubArray([ -2, 1, -3, 4, -1, 2, 1, -5, 4, [length]: 9 ]) should equal 6","","maxSubArray([ -2, 1, -3, 4, -1, 2, 1, -5, 4, [length]: 9 ]) should equal 6","inputArray = {inputArray}, returns {expectedResult}","inputArray = {inputArray}, returns {expectedResult}",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","6","","problems.easy.MaximumSubarray.MaximumSubarrayTest","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","shouldCalculate(int[], int) [5] [6, -7, 6, -3, 5], 8",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","2","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","testClimbingStairs(int, int) [5] input=5, expectedResult=8",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","76","","problems.easy.ClimbingStairs.ClimbingStairsTest","","problems.easy.ClimbingStairs.ClimbingStairsTest","testClimbingStairs","testClimbingStairs(int, int) [1] 1, 1",""
"passed","Sun Jul 16 17:22:30 GMT 2023","Sun Jul 16 17:22:30 GMT 2023","0","","climbStairs(4) should equal 5","","climbStairs(4) should equal 5","input = {input}, returns = {expectedResult}","input = {input}, returns = {expectedResult}",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","3","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [6] [-2, -3, 4, -1, -2, 1, 5, -3], 7",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[58-LVIII]",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","0","","maxSubArray([ 5, -3, 6, -7, 6, [length]: 5 ]) should equal 8","","maxSubArray([ 5, -3, 6, -7, 6, [length]: 5 ]) should equal 8","inputArray = {inputArray}, returns {expectedResult}","inputArray = {inputArray}, returns {expectedResult}",""
"failed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","3","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [7] [-1], 1",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MaximumSubarray","test_maximum_subarray","","","","test_maximum_subarray[input_array1-1]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","3","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [4] [5, -3, 6, -7, 6], 8",""
"failed","Sun Jul 16 17:22:28 GMT 2023","Sun Jul 16 17:22:28 GMT 2023","1","","combinationSum([ 2, 3, 5, [length]: 3 ], 8) should equal 2","","combinationSum([ 2, 3, 5, [length]: 3 ], 8) should equal 2","candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","21","","problems.easy.MaximumSubarray.MaximumSubarrayTest","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","shouldCalculate(int[], int) [7] [-1], -1",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","149","","problems.medium.GasStation.GasStationTest","","problems.medium.GasStation.GasStationTest","TestGasStationKt","TestGasStationKt(int[], int[], int) [1] [1, 2, 3, 4, 5], [3, 4, 5, 1, 2], 3",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.TwoSum","test_two_sum","","","","test_two_sum[nums0-9-expected_result0]",""
"failed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","4","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayKtTest","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayKtTest","testDegreeOfAnArray","testDegreeOfAnArray(int[], int) [2] [1, 2, 2, 3, 1, 4, 2], 6",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","3","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [3] [5, 4, -1, 7, 8], 23",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","6","","problems.easy.MaximumSubarray.MaximumSubarrayTest","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","shouldCalculate(int[], int) [1] [-2, 1, -3, 4, -1, 2, 1, -5, 4], 6",""
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","0","","","","GasStationTest","TestGasStation","TestGasStation([2, 3, 4],[3, 4, 3],-1)",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[9-IX]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MajorityElement","test_majority_element","","","","test_majority_element[input_array0-3]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.RomanToInteger","test_roman_to_integer","","","","test_roman_to_integer[IV-4]",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","8","","problems.easy.MaximumSubarray.MaximumSubarrayTest","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","shouldCalculate(int[], int) [2] [1], 1",""
"passed","Sun Jul 16 17:22:30 GMT 2023","Sun Jul 16 17:22:30 GMT 2023","1","","climbStairs(2) should equal 2","","climbStairs(2) should equal 2","input = {input}, returns = {expectedResult}","input = {input}, returns = {expectedResult}",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","0","","maxSubArray([ -2, -3, 4, -1, -2, 1, 5, -3, [length]: 8 ]) should equal 7","","maxSubArray([ -2, -3, 4, -1, -2, 1, 5, -3, [length]: 8 ]) should equal 7","inputArray = {inputArray}, returns {expectedResult}","inputArray = {inputArray}, returns {expectedResult}",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","21","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [1] inputArray=[-2, 1, -3, 4, -1, 2, 1, -5, 4], expectedResult=6",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","9","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","","problems.easy.ClimbingStairs.ClimbingStairsScalaTest","testClimbingStairs","testClimbingStairs(int, int) [1] input=1, expectedResult=1",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.ClimbingStairs","test_climbing_stairs","","","","test_climbing_stairs[3-3]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.ClimbingStairs","test_climbing_stairs","","","","test_climbing_stairs[4-5]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","6","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","","problems.easy.MaximumSubarray.MaximumSubarrayKtTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [1] [-2, 1, -3, 4, -1, 2, 1, -5, 4], 6",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.RomanToInteger","test_roman_to_integer","","","","test_roman_to_integer[III-3]",""
"failed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","6","","Two Sum","","Two Sum","case 01","case 01",""
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","11","","","","RecentCounterTest","PingTest","PingTest",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","1","","maxSubArray([ -2, -1, [length]: 2 ]) should equal -1","","maxSubArray([ -2, -1, [length]: 2 ]) should equal -1","inputArray = {inputArray}, returns {expectedResult}","inputArray = {inputArray}, returns {expectedResult}",""
"failed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20201001_20201007.CombinationSum","test_combination_sum","SolutionTest","","","test_4",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","0","","maxSubArray([ 6, -7, 6, -3, 5, [length]: 5 ]) should equal 8","","maxSubArray([ 6, -7, 6, -3, 5, [length]: 5 ]) should equal 8","inputArray = {inputArray}, returns {expectedResult}","inputArray = {inputArray}, returns {expectedResult}",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.ContainsDuplicate","test_contains_duplicate","","","","test_contains_duplicate[input1-False]",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","8","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [4] inputArray=[5, -3, 6, -7, 6], expectedResult=8",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.medium.IntegerToRoman","test_integer_to_roman","","","","test_integer_to_roman[4-IV]",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","1","","maxSubArray([ 1, [length]: 1 ]) should equal 1","","maxSubArray([ 1, [length]: 1 ]) should equal 1","inputArray = {inputArray}, returns {expectedResult}","inputArray = {inputArray}, returns {expectedResult}",""
"failed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","8","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayScalaTest","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayScalaTest","shouldCalculateDegree","shouldCalculateDegree(int[], int) [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","1","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [3] inputArray=[5, 4, -1, 7, 8], expectedResult=23",""
"failed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","3","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayScalaTest","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayScalaTest","shouldCalculateDegree","shouldCalculateDegree(int[], int) [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MaximumSubarray","test_maximum_subarray","","","","test_maximum_subarray[input_array3-8]",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","3","","problems.easy.MaximumSubarray.MaximumSubarrayTest","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","shouldCalculate(int[], int) [6] [-2, -3, 4, -1, -2, 1, 5, -3], 7",""
"failed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","9","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest","","problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest","shouldCalculateDegree","shouldCalculateDegree(int[], int) [2] [1, 2, 2, 3, 1, 4, 2], 6",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","3","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","","problems.easy.ClimbingStairs.ClimbingStairsKtTest","testClimbingStairs","testClimbingStairs(int, int) [2] 2, 2",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.RomanToInteger","test_roman_to_integer","","","","test_roman_to_integer[MDLXX-1570]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MaximumSubarray","test_maximum_subarray","","","","test_maximum_subarray[input_array5-7]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.MaximumSubarray","test_maximum_subarray","","","","test_maximum_subarray[input_array6--1]",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","124","","challenges.c20201001to20201007.NumberOfRecentCalls.NumberOfRecentCallsTest","","challenges.c20201001to20201007.NumberOfRecentCalls.NumberOfRecentCallsTest","testNumberOfRecentCalls","testNumberOfRecentCalls()",""
"failed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","1","src.test.java.challenges.c20201001_20201007.CombinationSum","test_combination_sum","SolutionTest","","","test_1",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree","test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree","","","","test_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree[original0-cloned0-target0-expected_result0]",""
"passed","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.problems.easy.ClimbingStairs","test_climbing_stairs","","","","test_climbing_stairs[2-2]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","5","","problems.medium.GasStation.GasStationTest","","problems.medium.GasStation.GasStationTest","TestGasStationKt","TestGasStationKt(int[], int[], int) [3] [7, 1, 0, 11, 4], [5, 9, 1, 2, 5], 3",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","1","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [6] inputArray=[-2, -3, 4, -1, -2, 1, 5, -3], expectedResult=7",""
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","1","","","","ClimbingStairsTest","ShouldCalculateStairs","ShouldCalculateStairs(2,2)",""
"passed","Sun Jul 16 17:22:35 GMT 2023","Sun Jul 16 17:22:35 GMT 2023","0","","","","ClimbingStairsTest","ShouldCalculateStairs","ShouldCalculateStairs(3,3)",""
"passed","Sun Jul 16 17:22:29 GMT 2023","Sun Jul 16 17:22:29 GMT 2023","2","","canCompleteCircuit(1, 3) should equal 3","","canCompleteCircuit(1, 3) should equal 3","gas = 1,2,3,4,5, cost = 3,4,5,1,2, returns 3","gas = 1,2,3,4,5, cost = 3,4,5,1,2, returns 3",""
"skipped","Sun Jul 16 17:22:43 GMT 2023","Sun Jul 16 17:22:43 GMT 2023","0","src.test.java.challenges.c20210115_20210121.FindTheMostCompetitiveSubsequence","test_find_the_most_competitive_subsequence","","","","test_most_competitive[nums1-4-expected_result1]",""
"passed","Sun Jul 16 17:26:13 GMT 2023","Sun Jul 16 17:26:13 GMT 2023","4","","problems.medium.GasStation.GasStationTest","","problems.medium.GasStation.GasStationTest","TestGasStationKt","TestGasStationKt(int[], int[], int) [2] [2, 3, 4], [3, 4, 3], -1",""
"passed","Sun Jul 16 17:26:14 GMT 2023","Sun Jul 16 17:26:14 GMT 2023","2","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","","problems.easy.MaximumSubarray.MaximumSubarrayScalaTest","shouldCalculateMaximumSubarray","shouldCalculateMaximumSubarray(int[], int) [8] inputArray=[-2, -1], expectedResult=-1",""
"passed","Sun Jul 16 17:26:12 GMT 2023","Sun Jul 16 17:26:12 GMT 2023","3","","problems.easy.MaximumSubarray.MaximumSubarrayTest","","problems.easy.MaximumSubarray.MaximumSubarrayTest","shouldCalculate","shouldCalculate(int[], int) [4] [5, -3, 6, -7, 6], 8",""
