{"uid":"d1a87ee735d48100","name":"candidates = 2, target = 1, returns ","fullName":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN.candidates = 2, target = 1, returns ","historyId":"b98ca059c42413c8cce95938cf12201","time":{"start":1689528148932,"stop":1689528148933,"duration":1},"description":"","descriptionHtml":"","status":"failed","statusMessage":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","statusTrace":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/challenges/c20201001_20201007/CombinationSum/combination_sum.test.js:35:56)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"testClass","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"testMethod","value":"candidates = 2, target = 1, returns "},{"name":"package","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"resultFormat","value":"allure1"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":78,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":78},"items":[{"uid":"d281eb4401488be7","reportUrl":"https://apetrovskiy.github.io/testLeCo/159//#testresult/d281eb4401488be7","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689520436351,"stop":1689520436352,"duration":1}},{"uid":"94406f72ad9338b8","reportUrl":"https://apetrovskiy.github.io/testLeCo/158//#testresult/94406f72ad9338b8","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689519353812,"stop":1689519353813,"duration":1}},{"uid":"af6fb57092ca2c3a","reportUrl":"https://apetrovskiy.github.io/testLeCo/157//#testresult/af6fb57092ca2c3a","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689518670653,"stop":1689518670654,"duration":1}},{"uid":"998f58160054280b","reportUrl":"https://apetrovskiy.github.io/testLeCo/156//#testresult/998f58160054280b","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689517953081,"stop":1689517953083,"duration":2}},{"uid":"602b7dd5fbfe5962","reportUrl":"https://apetrovskiy.github.io/testLeCo/155//#testresult/602b7dd5fbfe5962","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689514653944,"stop":1689514653946,"duration":2}},{"uid":"6b02bac371a91347","reportUrl":"https://apetrovskiy.github.io/testLeCo/154//#testresult/6b02bac371a91347","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688148999035,"stop":1688148999036,"duration":1}},{"uid":"54ce682b393ad8cb","reportUrl":"https://apetrovskiy.github.io/testLeCo/153//#testresult/54ce682b393ad8cb","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688146952070,"stop":1688146952071,"duration":1}},{"uid":"e869620603773f07","reportUrl":"https://apetrovskiy.github.io/testLeCo/152//#testresult/e869620603773f07","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688145982319,"stop":1688145982320,"duration":1}},{"uid":"3685d6bd6fe6d0e8","reportUrl":"https://apetrovskiy.github.io/testLeCo/151//#testresult/3685d6bd6fe6d0e8","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688145936093,"stop":1688145936094,"duration":1}},{"uid":"364f86ccc11a589f","reportUrl":"https://apetrovskiy.github.io/testLeCo/150//#testresult/364f86ccc11a589f","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688145927266,"stop":1688145927268,"duration":2}},{"uid":"168e97d3a77bc33c","reportUrl":"https://apetrovskiy.github.io/testLeCo/149//#testresult/168e97d3a77bc33c","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688145667514,"stop":1688145667515,"duration":1}},{"uid":"588d77232fbe88cd","reportUrl":"https://apetrovskiy.github.io/testLeCo/148//#testresult/588d77232fbe88cd","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688145617924,"stop":1688145617926,"duration":2}},{"uid":"88231d33df3e651e","reportUrl":"https://apetrovskiy.github.io/testLeCo/147//#testresult/88231d33df3e651e","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688144475664,"stop":1688144475665,"duration":1}},{"uid":"eba732639fd040fb","reportUrl":"https://apetrovskiy.github.io/testLeCo/146//#testresult/eba732639fd040fb","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688142326133,"stop":1688142326134,"duration":1}},{"uid":"75929171c0c9fc09","reportUrl":"https://apetrovskiy.github.io/testLeCo/145//#testresult/75929171c0c9fc09","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688133734766,"stop":1688133734767,"duration":1}},{"uid":"7889fdc3de433b5","reportUrl":"https://apetrovskiy.github.io/testLeCo/144//#testresult/7889fdc3de433b5","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688127199423,"stop":1688127199424,"duration":1}},{"uid":"2c6faf4dc9d4a218","reportUrl":"https://apetrovskiy.github.io/testLeCo/143//#testresult/2c6faf4dc9d4a218","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688119373712,"stop":1688119373713,"duration":1}},{"uid":"d9b941ed9d6349c5","reportUrl":"https://apetrovskiy.github.io/testLeCo/141//#testresult/d9b941ed9d6349c5","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688114571577,"stop":1688114571578,"duration":1}},{"uid":"ed836e634707a903","reportUrl":"https://apetrovskiy.github.io/testLeCo/140//#testresult/ed836e634707a903","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688114477518,"stop":1688114477519,"duration":1}},{"uid":"7a92855c868518fc","reportUrl":"https://apetrovskiy.github.io/testLeCo/139//#testresult/7a92855c868518fc","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688112205284,"stop":1688112205285,"duration":1}}]},"tags":[]},"source":"d1a87ee735d48100.json","parameterValues":[]}