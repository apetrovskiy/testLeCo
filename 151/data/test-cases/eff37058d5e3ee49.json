{"uid":"eff37058d5e3ee49","name":"candidates = 2,3,6,7, target = 8, returns 2,2,3,7","fullName":"combinationSum([ 2, 3, 6, 7, [length]: 4 ], 8) should equal 2.candidates = 2,3,6,7, target = 8, returns 2,2,3,7","historyId":"185ccc0557cae128673f03ec5737b24e","time":{"start":1688145936079,"stop":1688145936086,"duration":7},"description":"","descriptionHtml":"","status":"failed","statusMessage":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","statusTrace":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/challenges/c20201001_20201007/CombinationSum/combination_sum.test.js:35:56)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"combinationSum([ 2, 3, 6, 7, [length]: 4 ], 8) should equal 2"},{"name":"testClass","value":"combinationSum([ 2, 3, 6, 7, [length]: 4 ], 8) should equal 2"},{"name":"testMethod","value":"candidates = 2,3,6,7, target = 8, returns 2,2,3,7"},{"name":"package","value":"combinationSum([ 2, 3, 6, 7, [length]: 4 ], 8) should equal 2"},{"name":"resultFormat","value":"allure1"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":69,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":69},"items":[{"uid":"62c7f1ea33dcedfd","reportUrl":"https://apetrovskiy.github.io/testLeCo/150//#testresult/62c7f1ea33dcedfd","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688145927245,"stop":1688145927256,"duration":11}},{"uid":"85fcb3c3675c8bc","reportUrl":"https://apetrovskiy.github.io/testLeCo/149//#testresult/85fcb3c3675c8bc","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688145667498,"stop":1688145667505,"duration":7}},{"uid":"c2db383bf4fa8ebc","reportUrl":"https://apetrovskiy.github.io/testLeCo/148//#testresult/c2db383bf4fa8ebc","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688145617909,"stop":1688145617917,"duration":8}},{"uid":"b3ce016c2db63765","reportUrl":"https://apetrovskiy.github.io/testLeCo/147//#testresult/b3ce016c2db63765","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688144475642,"stop":1688144475653,"duration":11}},{"uid":"8a2866772bc50a2","reportUrl":"https://apetrovskiy.github.io/testLeCo/146//#testresult/8a2866772bc50a2","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688142326118,"stop":1688142326125,"duration":7}},{"uid":"dbf8dae9058092e7","reportUrl":"https://apetrovskiy.github.io/testLeCo/145//#testresult/dbf8dae9058092e7","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688133734749,"stop":1688133734757,"duration":8}},{"uid":"9a413c58ceae42b1","reportUrl":"https://apetrovskiy.github.io/testLeCo/144//#testresult/9a413c58ceae42b1","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688127199409,"stop":1688127199416,"duration":7}},{"uid":"c87ee5b6ead80e85","reportUrl":"https://apetrovskiy.github.io/testLeCo/143//#testresult/c87ee5b6ead80e85","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688119373698,"stop":1688119373705,"duration":7}},{"uid":"85c7378d1319e30b","reportUrl":"https://apetrovskiy.github.io/testLeCo/141//#testresult/85c7378d1319e30b","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688114571562,"stop":1688114571569,"duration":7}},{"uid":"da6afc4a77164f52","reportUrl":"https://apetrovskiy.github.io/testLeCo/140//#testresult/da6afc4a77164f52","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688114477500,"stop":1688114477509,"duration":9}},{"uid":"184f7b16687829a2","reportUrl":"https://apetrovskiy.github.io/testLeCo/139//#testresult/184f7b16687829a2","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688112205269,"stop":1688112205276,"duration":7}},{"uid":"e298eeec10d5905","reportUrl":"https://apetrovskiy.github.io/testLeCo/138//#testresult/e298eeec10d5905","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1688111545986,"stop":1688111545995,"duration":9}},{"uid":"5caab59db745af77","reportUrl":"https://apetrovskiy.github.io/testLeCo/137//#testresult/5caab59db745af77","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1685091044666,"stop":1685091044674,"duration":8}},{"uid":"a3ec89157276a253","reportUrl":"https://apetrovskiy.github.io/testLeCo/135//#testresult/a3ec89157276a253","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1679133332294,"stop":1679133332302,"duration":8}},{"uid":"aa10390dd77163f2","reportUrl":"https://apetrovskiy.github.io/testLeCo/136//#testresult/aa10390dd77163f2","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1679133369876,"stop":1679133369883,"duration":7}},{"uid":"fea281291823b681","reportUrl":"https://apetrovskiy.github.io/testLeCo/134//#testresult/fea281291823b681","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1668971736493,"stop":1668971736501,"duration":8}},{"uid":"625450b5264c21e1","reportUrl":"https://apetrovskiy.github.io/testLeCo/133//#testresult/625450b5264c21e1","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1668970671583,"stop":1668970671590,"duration":7}},{"uid":"20acd7dac31e6275","reportUrl":"https://apetrovskiy.github.io/testLeCo/132//#testresult/20acd7dac31e6275","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1668957541127,"stop":1668957541134,"duration":7}},{"uid":"8325abed8ac13e7f","reportUrl":"https://apetrovskiy.github.io/testLeCo/131//#testresult/8325abed8ac13e7f","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1668944161592,"stop":1668944161601,"duration":9}},{"uid":"35a272da77b80b46","reportUrl":"https://apetrovskiy.github.io/testLeCo/130//#testresult/35a272da77b80b46","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","time":{"start":1668083748147,"stop":1668083748154,"duration":7}}]},"tags":[]},"source":"eff37058d5e3ee49.json","parameterValues":[]}