{"uid":"8a47c31d02ec6e0a","name":"candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","fullName":"combinationSum([ 2, 3, 5, [length]: 3 ], 8) should equal 2.candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","historyId":"5c54ebeaf926297a54192eb2ad7ba497","time":{"start":1688145936090,"stop":1688145936092,"duration":2},"description":"","descriptionHtml":"","status":"failed","statusMessage":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","statusTrace":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/challenges/c20201001_20201007/CombinationSum/combination_sum.test.js:35:56)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"combinationSum([ 2, 3, 5, [length]: 3 ], 8) should equal 2"},{"name":"testClass","value":"combinationSum([ 2, 3, 5, [length]: 3 ], 8) should equal 2"},{"name":"testMethod","value":"candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5"},{"name":"package","value":"combinationSum([ 2, 3, 5, [length]: 3 ], 8) should equal 2"},{"name":"resultFormat","value":"allure1"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":69,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":69},"items":[{"uid":"710e60f5cf99ad6b","reportUrl":"https://apetrovskiy.github.io/testLeCo/150//#testresult/710e60f5cf99ad6b","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688145927263,"stop":1688145927265,"duration":2}},{"uid":"431d20749833778d","reportUrl":"https://apetrovskiy.github.io/testLeCo/149//#testresult/431d20749833778d","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688145667509,"stop":1688145667513,"duration":4}},{"uid":"7f2dfb0c3dae52d4","reportUrl":"https://apetrovskiy.github.io/testLeCo/148//#testresult/7f2dfb0c3dae52d4","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688145617922,"stop":1688145617923,"duration":1}},{"uid":"c55841954bad8db7","reportUrl":"https://apetrovskiy.github.io/testLeCo/147//#testresult/c55841954bad8db7","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688144475660,"stop":1688144475662,"duration":2}},{"uid":"58554bf6f3892b66","reportUrl":"https://apetrovskiy.github.io/testLeCo/146//#testresult/58554bf6f3892b66","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688142326130,"stop":1688142326131,"duration":1}},{"uid":"9c967d0ed469549","reportUrl":"https://apetrovskiy.github.io/testLeCo/145//#testresult/9c967d0ed469549","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688133734763,"stop":1688133734765,"duration":2}},{"uid":"fd64695011a73570","reportUrl":"https://apetrovskiy.github.io/testLeCo/144//#testresult/fd64695011a73570","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688127199421,"stop":1688127199422,"duration":1}},{"uid":"c903e0844f96d39b","reportUrl":"https://apetrovskiy.github.io/testLeCo/143//#testresult/c903e0844f96d39b","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688119373710,"stop":1688119373711,"duration":1}},{"uid":"f36c161b8d929814","reportUrl":"https://apetrovskiy.github.io/testLeCo/141//#testresult/f36c161b8d929814","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688114571574,"stop":1688114571576,"duration":2}},{"uid":"2336cfa134b287ed","reportUrl":"https://apetrovskiy.github.io/testLeCo/140//#testresult/2336cfa134b287ed","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688114477514,"stop":1688114477516,"duration":2}},{"uid":"efada2234dcc44fe","reportUrl":"https://apetrovskiy.github.io/testLeCo/139//#testresult/efada2234dcc44fe","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688112205281,"stop":1688112205282,"duration":1}},{"uid":"a12f3a09b7f1f9ad","reportUrl":"https://apetrovskiy.github.io/testLeCo/138//#testresult/a12f3a09b7f1f9ad","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1688111546002,"stop":1688111546004,"duration":2}},{"uid":"64087ed09821a52c","reportUrl":"https://apetrovskiy.github.io/testLeCo/137//#testresult/64087ed09821a52c","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1685091044679,"stop":1685091044681,"duration":2}},{"uid":"d9117e60b58228e2","reportUrl":"https://apetrovskiy.github.io/testLeCo/135//#testresult/d9117e60b58228e2","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1679133332308,"stop":1679133332310,"duration":2}},{"uid":"f24cc2c4463932f8","reportUrl":"https://apetrovskiy.github.io/testLeCo/136//#testresult/f24cc2c4463932f8","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1679133369888,"stop":1679133369890,"duration":2}},{"uid":"bfaf24efb9329d82","reportUrl":"https://apetrovskiy.github.io/testLeCo/134//#testresult/bfaf24efb9329d82","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1668971736505,"stop":1668971736507,"duration":2}},{"uid":"357ef01bfa067cf5","reportUrl":"https://apetrovskiy.github.io/testLeCo/133//#testresult/357ef01bfa067cf5","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1668970671595,"stop":1668970671596,"duration":1}},{"uid":"2cabde2e6e4dafc5","reportUrl":"https://apetrovskiy.github.io/testLeCo/132//#testresult/2cabde2e6e4dafc5","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1668957541138,"stop":1668957541140,"duration":2}},{"uid":"77a125ce80a0b8b7","reportUrl":"https://apetrovskiy.github.io/testLeCo/131//#testresult/77a125ce80a0b8b7","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1668944161607,"stop":1668944161609,"duration":2}},{"uid":"434ffe9d632f3db0","reportUrl":"https://apetrovskiy.github.io/testLeCo/130//#testresult/434ffe9d632f3db0","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","time":{"start":1668083748159,"stop":1668083748160,"duration":1}}]},"tags":[]},"source":"8a47c31d02ec6e0a.json","parameterValues":[]}