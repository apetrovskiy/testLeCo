{
  "uid" : "2b754c0a3faac37",
  "name" : "candidates = 1, target = 2, returns 1,1",
  "fullName" : "combinationSum([ 1, [length]: 1 ], 2) should equal 1.candidates = 1, target = 2, returns 1,1",
  "historyId" : "9c74feb5a56e27daaf623eb1f3af0395",
  "time" : {
    "start" : 1668970671602,
    "stop" : 1668970671603,
    "duration" : 1
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
  "statusTrace" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/challenges/c20201001_20201007/CombinationSum/combination_sum.test.js:35:56)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "combinationSum([ 1, [length]: 1 ], 2) should equal 1"
  }, {
    "name" : "testClass",
    "value" : "combinationSum([ 1, [length]: 1 ], 2) should equal 1"
  }, {
    "name" : "testMethod",
    "value" : "candidates = 1, target = 2, returns 1,1"
  }, {
    "name" : "package",
    "value" : "combinationSum([ 1, [length]: 1 ], 2) should equal 1"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 52,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 52
      },
      "items" : [ {
        "uid" : "f25a0b319f9e91f4",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/132//#testresult/f25a0b319f9e91f4",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1668957541145,
          "stop" : 1668957541146,
          "duration" : 1
        }
      }, {
        "uid" : "9c4ea1c7268e2eaf",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/131//#testresult/9c4ea1c7268e2eaf",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1668944161615,
          "stop" : 1668944161617,
          "duration" : 2
        }
      }, {
        "uid" : "2408b6307567c2e0",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/130//#testresult/2408b6307567c2e0",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1668083748165,
          "stop" : 1668083748167,
          "duration" : 2
        }
      }, {
        "uid" : "5b9b2b1d31dbb291",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/129//#testresult/5b9b2b1d31dbb291",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1633007452170,
          "stop" : 1633007452171,
          "duration" : 1
        }
      }, {
        "uid" : "2b764effa527b2e6",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/128//#testresult/2b764effa527b2e6",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1633005418966,
          "stop" : 1633005418968,
          "duration" : 2
        }
      }, {
        "uid" : "25fca5d2eb18fe5f",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/127//#testresult/25fca5d2eb18fe5f",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1632897211894,
          "stop" : 1632897211895,
          "duration" : 1
        }
      }, {
        "uid" : "e5baae702ec362cf",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/126//#testresult/e5baae702ec362cf",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1632854629006,
          "stop" : 1632854629007,
          "duration" : 1
        }
      }, {
        "uid" : "622b644ce000d458",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/125//#testresult/622b644ce000d458",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1622041612037,
          "stop" : 1622041612039,
          "duration" : 2
        }
      }, {
        "uid" : "7b70d990bdaed51b",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/123//#testresult/7b70d990bdaed51b",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1622041305126,
          "stop" : 1622041305128,
          "duration" : 2
        }
      }, {
        "uid" : "cc808417a467d10d",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/122//#testresult/cc808417a467d10d",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1622040430921,
          "stop" : 1622040430923,
          "duration" : 2
        }
      }, {
        "uid" : "e628731a2c0e22b1",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/121//#testresult/e628731a2c0e22b1",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1622015693870,
          "stop" : 1622015693872,
          "duration" : 2
        }
      }, {
        "uid" : "70340c58982bc67e",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/120//#testresult/70340c58982bc67e",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1622015395527,
          "stop" : 1622015395528,
          "duration" : 1
        }
      }, {
        "uid" : "9dea53e4b0a7f38b",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/119//#testresult/9dea53e4b0a7f38b",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1621980508048,
          "stop" : 1621980508049,
          "duration" : 1
        }
      }, {
        "uid" : "c7ad6429793f8f45",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/118//#testresult/c7ad6429793f8f45",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1621974939108,
          "stop" : 1621974939110,
          "duration" : 2
        }
      }, {
        "uid" : "293eaa74856b3dc8",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/117//#testresult/293eaa74856b3dc8",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1621970319051,
          "stop" : 1621970319053,
          "duration" : 2
        }
      }, {
        "uid" : "9ef3fb239bed67a2",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/116//#testresult/9ef3fb239bed67a2",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1621959366495,
          "stop" : 1621959366496,
          "duration" : 1
        }
      }, {
        "uid" : "c92a01d547647548",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/115//#testresult/c92a01d547647548",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1621857970514,
          "stop" : 1621857970516,
          "duration" : 2
        }
      }, {
        "uid" : "aeb111b057b6ccf9",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/114//#testresult/aeb111b057b6ccf9",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1621857209899,
          "stop" : 1621857209901,
          "duration" : 2
        }
      }, {
        "uid" : "8fb6e2e8ef701ba0",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/113//#testresult/8fb6e2e8ef701ba0",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1621856592120,
          "stop" : 1621856592121,
          "duration" : 1
        }
      }, {
        "uid" : "5c7c7ac7bba56976",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/112//#testresult/5c7c7ac7bba56976",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
        "time" : {
          "start" : 1621855628356,
          "stop" : 1621855628358,
          "duration" : 2
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2b754c0a3faac37.json",
  "parameterValues" : [ ]
}