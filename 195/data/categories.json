{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","children":[{"name":"test Combination sum: candidates = 2,3,6,7, target = 8, returns 2,2,3,7","uid":"6f355f2ff2874cff","parentUid":"c8dc970e3084b322200660b8b93459a7","status":"failed","time":{"start":1700322977154,"stop":1700322977163,"duration":9},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"c8dc970e3084b322200660b8b93459a7"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","children":[{"name":"test Combination sum: candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","uid":"31f0101ae0dbd11b","parentUid":"d6bb085e000a30b4c594de3ad9bd0168","status":"failed","time":{"start":1700322977171,"stop":1700322977173,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6bb085e000a30b4c594de3ad9bd0168"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","children":[{"name":"test Combination sum: candidates = 2, target = 1, returns ","uid":"dd8ae6208741afa3","parentUid":"d6777d56dd4deacebae2eaffe25a910f","status":"failed","time":{"start":1700322977175,"stop":1700322977176,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6777d56dd4deacebae2eaffe25a910f"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"test Combination sum: candidates = 1, target = 1, returns 1","uid":"227932328c54841a","parentUid":"18486bf4495adb834cbda85366ca81f6","status":"failed","time":{"start":1700322977177,"stop":1700322977179,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"18486bf4495adb834cbda85366ca81f6"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"test Combination sum: candidates = 1, target = 2, returns 1,1","uid":"5715b2cd1a932b3c","parentUid":"6cf77b292b0cf43d0edd2bed6cc06149","status":"failed","time":{"start":1700322977180,"stop":1700322977182,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"6cf77b292b0cf43d0edd2bed6cc06149"},{"name":"ReferenceError: assert is not defined","children":[{"name":"case 01","uid":"3a1367917fe37414","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700322977285,"stop":1700322977286,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"case 02","uid":"5f9b2c4eb14e7e42","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700322977286,"stop":1700322977287,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"case 03","uid":"7333c234f5fc391d","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700322977287,"stop":1700322977287,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"a9dc2694a3b8143090badc0acddfd14d"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0","children":[{"name":"test Degree of an array: inputArray = {inputArray} returns {expectedResult}","uid":"4c10fefdd1b5fcda","parentUid":"e1d94523ee7a5e0494ab47b09ca20494","status":"failed","time":{"start":1700322977533,"stop":1700322977537,"duration":4},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"e1d94523ee7a5e0494ab47b09ca20494"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0","children":[{"name":"test Degree of an array: inputArray = {inputArray} returns {expectedResult}","uid":"5cbd45d57381f4fa","parentUid":"3fa104e949e4dff04b2821d628f7edd7","status":"failed","time":{"start":1700322977542,"stop":1700322977542,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3fa104e949e4dff04b2821d628f7edd7"},{"children":[{"name":"Maximum Subarray","uid":"e704853a9bcabb61","parentUid":"666d1a31450af3ae8459f14f07f9a1b4","status":"failed","time":{"start":1700322984913,"stop":1700322984913,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":7,"retriesStatusChange":true,"parameters":[],"tags":[]}],"uid":"666d1a31450af3ae8459f14f07f9a1b4"},{"name":"AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f80da58c500>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f80da58c500>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f80da58c500>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f80da58c500> = Solution()","children":[{"name":"test Python","uid":"ea274b5049d980d7","parentUid":"5f73481488a820bf30c1b2f364ba496a","status":"failed","time":{"start":1700323005535,"stop":1700323005535,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":["tag Python"]}],"uid":"5f73481488a820bf30c1b2f364ba496a"},{"name":"AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f80da586d80>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f80da586d80>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f80da586d80>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f80da586d80> = Solution()","children":[{"name":"test Python","uid":"50eebae13d3bfec0","parentUid":"dbcb143e09923b0bd176e821ba597f47","status":"failed","time":{"start":1700323005541,"stop":1700323005541,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":["tag Python"]}],"uid":"dbcb143e09923b0bd176e821ba597f47"},{"name":"AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One","children":[{"name":"test Python","uid":"65702ceacacd2763","parentUid":"9123ab527d641dc38f1b3f28156694cf","status":"failed","time":{"start":1700323005607,"stop":1700323005608,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["'One'","1"],"tags":["tag Python"]}],"uid":"9123ab527d641dc38f1b3f28156694cf"},{"name":"expected: <2> but was: <0>","children":[{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"18d7797291b362e8","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700323134281,"stop":1700323134370,"duration":89},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"2cceb085cb8465b0","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700323134526,"stop":1700323134536,"duration":10},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2","uid":"b1df2fd9c374ae25","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700323134653,"stop":1700323134662,"duration":9},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":[]}],"uid":"1b76bbb71605dc05c40417bab1c64cee"},{"name":"expected: <6> but was: <0>","children":[{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"f07c8bf6c7847d38","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700323134425,"stop":1700323134427,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"3b780dd945db3b44","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700323134566,"stop":1700323134576,"duration":10},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6","uid":"b07c10c43d776762","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700323134707,"stop":1700323134720,"duration":13},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":[]}],"uid":"81358dd8b9856946968faa7abcb09861"},{"name":"expected: <1> but was: <-1>","children":[{"name":"test Maximum subarray [7] [-1], 1","uid":"503cd8bfd4bd57be","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700323135212,"stop":1700323135235,"duration":23},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-1]","1"],"tags":[]},{"name":"test Maximum subarray [8] [-2, -1], 1","uid":"f2062cd93114431e","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700323135272,"stop":1700323135282,"duration":10},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-2, -1]","1"],"tags":[]}],"uid":"695ea6ea5dee800d5d4f9590f68ac3d6"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"AttributeError: 'SolutionTest' object has no attribute 'assertEquals'. Did you mean: 'assertEqual'?","children":[{"name":"test Combination sum 01","uid":"8438cba47562eff3","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700323005426,"stop":1700323005426,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 02","uid":"660fb939d278cb1","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700323005457,"stop":1700323005457,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 03","uid":"5d7b229eb14a8a35","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700323005466,"stop":1700323005466,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 04","uid":"7927394ef7407cd2","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700323005476,"stop":1700323005476,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 05","uid":"da5e55dcdbf30721","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700323005485,"stop":1700323005485,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]}],"uid":"8b28b79d3c747cdf21e370fc8cdc4919"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}