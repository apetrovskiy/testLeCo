{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","children":[{"name":"candidates = 2,3,6,7, target = 8, returns 2,2,3,7","uid":"74a1276c876a0755","parentUid":"c8dc970e3084b322200660b8b93459a7","status":"failed","time":{"start":1690221987534,"stop":1690221987541,"duration":7},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"c8dc970e3084b322200660b8b93459a7"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","children":[{"name":"candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","uid":"9832114c39fcbf60","parentUid":"d6bb085e000a30b4c594de3ad9bd0168","status":"failed","time":{"start":1690221987546,"stop":1690221987548,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"d6bb085e000a30b4c594de3ad9bd0168"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","children":[{"name":"candidates = 2, target = 1, returns ","uid":"36e19490ecfb126","parentUid":"d6777d56dd4deacebae2eaffe25a910f","status":"failed","time":{"start":1690221987549,"stop":1690221987550,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"d6777d56dd4deacebae2eaffe25a910f"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"candidates = 1, target = 1, returns 1","uid":"5f32e9a5ebc6560f","parentUid":"18486bf4495adb834cbda85366ca81f6","status":"failed","time":{"start":1690221987551,"stop":1690221987563,"duration":12},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"18486bf4495adb834cbda85366ca81f6"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"candidates = 1, target = 2, returns 1,1","uid":"d81dadd405eae578","parentUid":"6cf77b292b0cf43d0edd2bed6cc06149","status":"failed","time":{"start":1690221987564,"stop":1690221987565,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"6cf77b292b0cf43d0edd2bed6cc06149"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0","children":[{"name":"inputArray = {inputArray} returns {expectedResult}","uid":"8e295364f59b2132","parentUid":"e1d94523ee7a5e0494ab47b09ca20494","status":"failed","time":{"start":1690221988207,"stop":1690221988211,"duration":4},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"e1d94523ee7a5e0494ab47b09ca20494"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0","children":[{"name":"inputArray = {inputArray} returns {expectedResult}","uid":"f276f5c75dd6e214","parentUid":"3fa104e949e4dff04b2821d628f7edd7","status":"failed","time":{"start":1690221988215,"stop":1690221988215,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"3fa104e949e4dff04b2821d628f7edd7"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:6:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","children":[{"name":"case 01","uid":"1535421c9f93eb68","parentUid":"80ec54a5eb12547673125d53132c38c3","status":"failed","time":{"start":1690221988448,"stop":1690221988454,"duration":6},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"80ec54a5eb12547673125d53132c38c3"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [1, 2]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 1, 2 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   1,\n                -   2,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:9:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","children":[{"name":"case 02","uid":"527d6e92719fe360","parentUid":"d36619d941a99f6913d5ce83fabc086b","status":"failed","time":{"start":1690221988454,"stop":1690221988455,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"d36619d941a99f6913d5ce83fabc086b"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:12:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","children":[{"name":"case 03","uid":"6511582e5d4c60ee","parentUid":"ba6673e5b21682426f2040c851338e02","status":"failed","time":{"start":1690221988455,"stop":1690221988456,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"ba6673e5b21682426f2040c851338e02"},{"name":"Assert.Equal() Failure: Strings differ\n           ↓ (pos 0)\nExpected: \"apbqcd\"\nActual:   \"\"","children":[{"name":"test.java.problems.easy.MergeStringsAlternately.MergeStringsAlternatelyTest.MergeAlternativelyTest(word1: \"abcd\", word2: \"pq\", expectedResult: \"apbqcd\")","uid":"eaee0bc73aa41552","parentUid":"b25fa22d7f4518999a1a895991eaf8a9","status":"failed","time":{"start":1690221992389,"stop":1690221992432,"duration":43},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"b25fa22d7f4518999a1a895991eaf8a9"},{"name":"Assert.Equal() Failure: Strings differ\n           ↓ (pos 0)\nExpected: \"apbqcr\"\nActual:   \"\"","children":[{"name":"test.java.problems.easy.MergeStringsAlternately.MergeStringsAlternatelyTest.MergeAlternativelyTest(word1: \"abc\", word2: \"pqr\", expectedResult: \"apbqcr\")","uid":"73b2e4877c32f8d3","parentUid":"89a6f969359075b8aa7904adc8a128c1","status":"failed","time":{"start":1690221992437,"stop":1690221992438,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"89a6f969359075b8aa7904adc8a128c1"},{"name":"Assert.Equal() Failure: Strings differ\n           ↓ (pos 0)\nExpected: \"apbqrs\"\nActual:   \"\"","children":[{"name":"test.java.problems.easy.MergeStringsAlternately.MergeStringsAlternatelyTest.MergeAlternativelyTest(word1: \"ab\", word2: \"pqrs\", expectedResult: \"apbqrs\")","uid":"c0e05800359ed54","parentUid":"b0f4b8801b5891db5ed295be484fc0d7","status":"failed","time":{"start":1690221992442,"stop":1690221992442,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"b0f4b8801b5891db5ed295be484fc0d7"},{"name":"AssertionError: Lists differ: [[2, 2, 3], [7]] != []\n\nFirst list contains 2 additional elements.\nFirst extra element 0:\n[2, 2, 3]\n\n- [[2, 2, 3], [7]]\n+ []","children":[{"name":"test_1","uid":"972acb8ef36322e5","parentUid":"9c36c0d89f9478629a8668ff735ae4a1","status":"failed","time":{"start":1690222013707,"stop":1690222013707,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"9c36c0d89f9478629a8668ff735ae4a1"},{"name":"AssertionError: Lists differ: [[2, 2, 2, 2], [2, 3, 3], [3, 5]] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n[2, 2, 2, 2]\n\n- [[2, 2, 2, 2], [2, 3, 3], [3, 5]]\n+ []","children":[{"name":"test_2","uid":"35c53069a3b8c196","parentUid":"1b3f6a30bd56ce3366a2c0d71463b27d","status":"failed","time":{"start":1690222013742,"stop":1690222013743,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"1b3f6a30bd56ce3366a2c0d71463b27d"},{"name":"AssertionError: Lists differ: [[1]] != [[0]]\n\nFirst differing element 0:\n[1]\n[0]\n\n- [[1]]\n?   ^\n\n+ [[0]]\n?   ^","children":[{"name":"test_4","uid":"4391893ebf501cac","parentUid":"a8a7cd336e05f958baac176fc0cb66bf","status":"failed","time":{"start":1690222013749,"stop":1690222013749,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"a8a7cd336e05f958baac176fc0cb66bf"},{"name":"AssertionError: Lists differ: [[1, 1]] != [[0, 1]]\n\nFirst differing element 0:\n[1, 1]\n[0, 1]\n\n- [[1, 1]]\n?   ^\n\n+ [[0, 1]]\n?   ^","children":[{"name":"test_5","uid":"fb7905e8ffb140ff","parentUid":"9e9e18b679ff66d0c9d4a05338b3055e","status":"failed","time":{"start":1690222013753,"stop":1690222013754,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"9e9e18b679ff66d0c9d4a05338b3055e"},{"name":"AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7fc247dd0d00>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7fc247dd0d00>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7fc247dd0d00>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7fc247dd0d00> = Solution()","children":[{"name":"test_degree_of_an_subarray[input_array0-2]","uid":"c2815040d3d93699","parentUid":"dfafd7f8ed2c3ea4dbee83f9b4f33f9c","status":"failed","time":{"start":1690222013794,"stop":1690222013794,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"]}],"uid":"dfafd7f8ed2c3ea4dbee83f9b4f33f9c"},{"name":"AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7fc247e50d30>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7fc247e50d30>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7fc247e50d30>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7fc247e50d30> = Solution()","children":[{"name":"test_degree_of_an_subarray[input_array1-6]","uid":"fcc07065e930ec9c","parentUid":"9f44a1ab484005e584a7da84fd5860f3","status":"failed","time":{"start":1690222013798,"stop":1690222013799,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"]}],"uid":"9f44a1ab484005e584a7da84fd5860f3"},{"name":"AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One","children":[{"name":"test_integer_to_english_words[1-One]","uid":"e3bcdd82532832c6","parentUid":"9123ab527d641dc38f1b3f28156694cf","status":"failed","time":{"start":1690222013863,"stop":1690222013863,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["'One'","1"]}],"uid":"9123ab527d641dc38f1b3f28156694cf"},{"name":"expected: <2> but was: <0>","children":[{"name":"shouldCalculateDegree(int[], int) [1] [1, 2, 2, 3, 1], 2","uid":"2fce959b90e206e5","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1690222256658,"stop":1690222256825,"duration":167},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"]},{"name":"testDegreeOfAnArray(int[], int) [1] [1, 2, 2, 3, 1], 2","uid":"3c8f9f332cd02dcb","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1690222257421,"stop":1690222257436,"duration":15},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"]},{"name":"shouldCalculateDegree(int[], int) [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2","uid":"92f4f65b0ea15f46","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1690222258412,"stop":1690222258419,"duration":7},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"]}],"uid":"1b76bbb71605dc05c40417bab1c64cee"},{"name":"expected: <6> but was: <0>","children":[{"name":"shouldCalculateDegree(int[], int) [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"178c1aa57d155def","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1690222256864,"stop":1690222256867,"duration":3},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"]},{"name":"testDegreeOfAnArray(int[], int) [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"2321fa17ce8a6a7f","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1690222257455,"stop":1690222257457,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"]},{"name":"shouldCalculateDegree(int[], int) [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6","uid":"fb58c37e7064e1fb","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1690222258432,"stop":1690222258434,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"]}],"uid":"81358dd8b9856946968faa7abcb09861"},{"name":"expected: <1> but was: <-1>","children":[{"name":"shouldCalculateMaximumSubarray(int[], int) [7] [-1], 1","uid":"59535177321c86e7","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1690222257503,"stop":1690222257505,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-1]","1"]},{"name":"shouldCalculateMaximumSubarray(int[], int) [8] [-2, -1], 1","uid":"3bcce8a3e0babb81","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1690222257514,"stop":1690222257526,"duration":12},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-2, -1]","1"]}],"uid":"695ea6ea5dee800d5d4f9590f68ac3d6"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}