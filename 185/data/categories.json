{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","children":[{"name":"candidates = 2,3,6,7, target = 8, returns 2,2,3,7","uid":"32f05832b60a63d7","parentUid":"c8dc970e3084b322200660b8b93459a7","status":"failed","time":{"start":1700266767967,"stop":1700266767974,"duration":7},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"c8dc970e3084b322200660b8b93459a7"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","children":[{"name":"candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","uid":"e13ecb006ce63660","parentUid":"d6bb085e000a30b4c594de3ad9bd0168","status":"failed","time":{"start":1700266767979,"stop":1700266767980,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6bb085e000a30b4c594de3ad9bd0168"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","children":[{"name":"candidates = 2, target = 1, returns ","uid":"5b0aaf0300dab0a","parentUid":"d6777d56dd4deacebae2eaffe25a910f","status":"failed","time":{"start":1700266767981,"stop":1700266767981,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6777d56dd4deacebae2eaffe25a910f"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"candidates = 1, target = 1, returns 1","uid":"27df117cdd39e19b","parentUid":"18486bf4495adb834cbda85366ca81f6","status":"failed","time":{"start":1700266767982,"stop":1700266767983,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"18486bf4495adb834cbda85366ca81f6"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"candidates = 1, target = 2, returns 1,1","uid":"17977a2488fb7b69","parentUid":"6cf77b292b0cf43d0edd2bed6cc06149","status":"failed","time":{"start":1700266767984,"stop":1700266767984,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"6cf77b292b0cf43d0edd2bed6cc06149"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0","children":[{"name":"inputArray = {inputArray} returns {expectedResult}","uid":"8db997ac96d88094","parentUid":"e1d94523ee7a5e0494ab47b09ca20494","status":"failed","time":{"start":1700266768228,"stop":1700266768233,"duration":5},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"e1d94523ee7a5e0494ab47b09ca20494"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0","children":[{"name":"inputArray = {inputArray} returns {expectedResult}","uid":"d3755912c902b261","parentUid":"3fa104e949e4dff04b2821d628f7edd7","status":"failed","time":{"start":1700266768238,"stop":1700266768239,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3fa104e949e4dff04b2821d628f7edd7"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:6:12)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)","children":[{"name":"case 01","uid":"bb735d309d031331","parentUid":"dfd7a35ba1f9c457394714bae1c2c100","status":"failed","time":{"start":1700266768245,"stop":1700266768254,"duration":9},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"dfd7a35ba1f9c457394714bae1c2c100"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [1, 2]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 1, 2 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   1,\n                -   2,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:9:12)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)","children":[{"name":"case 02","uid":"5207bc1f656688cd","parentUid":"5b3dc0edb1e9be3da46d87e50b241290","status":"failed","time":{"start":1700266768254,"stop":1700266768255,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"5b3dc0edb1e9be3da46d87e50b241290"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:12:12)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)","children":[{"name":"case 03","uid":"795a0e5e6b1c3fca","parentUid":"60caa1f6367c03aff5ce08ef71247eea","status":"failed","time":{"start":1700266768255,"stop":1700266768256,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"60caa1f6367c03aff5ce08ef71247eea"},{"name":"AssertionError: Lists differ: [[2, 2, 3], [7]] != []\n\nFirst list contains 2 additional elements.\nFirst extra element 0:\n[2, 2, 3]\n\n- [[2, 2, 3], [7]]\n+ []","children":[{"name":"test Combination sum 01","uid":"74e6a54f3fe0de25","parentUid":"9c36c0d89f9478629a8668ff735ae4a1","status":"failed","time":{"start":1700266779795,"stop":1700266779795,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]}],"uid":"9c36c0d89f9478629a8668ff735ae4a1"},{"name":"AssertionError: Lists differ: [[2, 2, 2, 2], [2, 3, 3], [3, 5]] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n[2, 2, 2, 2]\n\n- [[2, 2, 2, 2], [2, 3, 3], [3, 5]]\n+ []","children":[{"name":"test Combination sum 02","uid":"62c53fe7f3228b03","parentUid":"1b3f6a30bd56ce3366a2c0d71463b27d","status":"failed","time":{"start":1700266779823,"stop":1700266779824,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]}],"uid":"1b3f6a30bd56ce3366a2c0d71463b27d"},{"name":"AssertionError: Lists differ: [[1]] != [[0]]\n\nFirst differing element 0:\n[1]\n[0]\n\n- [[1]]\n?   ^\n\n+ [[0]]\n?   ^","children":[{"name":"test Combination sum 04","uid":"f3abfd66fe1e5116","parentUid":"a8a7cd336e05f958baac176fc0cb66bf","status":"failed","time":{"start":1700266779828,"stop":1700266779828,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]}],"uid":"a8a7cd336e05f958baac176fc0cb66bf"},{"name":"AssertionError: Lists differ: [[1, 1]] != [[0, 1]]\n\nFirst differing element 0:\n[1, 1]\n[0, 1]\n\n- [[1, 1]]\n?   ^\n\n+ [[0, 1]]\n?   ^","children":[{"name":"test Combination sum 05","uid":"cd52790f232988b5","parentUid":"9e9e18b679ff66d0c9d4a05338b3055e","status":"failed","time":{"start":1700266779831,"stop":1700266779832,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]}],"uid":"9e9e18b679ff66d0c9d4a05338b3055e"},{"name":"AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f172483fb50>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f172483fb50>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f172483fb50>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f172483fb50> = Solution()","children":[{"name":"test Python","uid":"679d4be17df943d1","parentUid":"7b0e0c5b1ae7154de265cca218241bda","status":"failed","time":{"start":1700266779861,"stop":1700266779861,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":["tag Python"]}],"uid":"7b0e0c5b1ae7154de265cca218241bda"},{"name":"AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f17248ace20>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f17248ace20>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f17248ace20>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f17248ace20> = Solution()","children":[{"name":"test Python","uid":"113402473662b27c","parentUid":"50eeeb9cd7c4a94b18b9466cafa7f430","status":"failed","time":{"start":1700266779864,"stop":1700266779865,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":["tag Python"]}],"uid":"50eeeb9cd7c4a94b18b9466cafa7f430"},{"name":"AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One","children":[{"name":"test Python","uid":"cd9106839ff350c1","parentUid":"9123ab527d641dc38f1b3f28156694cf","status":"failed","time":{"start":1700266779912,"stop":1700266779913,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["'One'","1"],"tags":["tag Python"]}],"uid":"9123ab527d641dc38f1b3f28156694cf"},{"name":"expected: <2> but was: <0>","children":[{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"43eaa78b6f1c4242","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700266942724,"stop":1700266942799,"duration":75},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"86a8580f0be7f76e","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700266942996,"stop":1700266943009,"duration":13},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2","uid":"7319f61f714b4d2","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700266943119,"stop":1700266943131,"duration":12},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":[]}],"uid":"1b76bbb71605dc05c40417bab1c64cee"},{"name":"expected: <6> but was: <0>","children":[{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"b1adf846ca99fe80","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700266942841,"stop":1700266942871,"duration":30},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"16ec746bed29bd75","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700266943042,"stop":1700266943044,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6","uid":"1256f053db68c303","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700266943161,"stop":1700266943167,"duration":6},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":[]}],"uid":"81358dd8b9856946968faa7abcb09861"},{"name":"expected: <1> but was: <-1>","children":[{"name":"test Maximum subarray [7] [-1], 1","uid":"c65c7fb98232792b","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700266943622,"stop":1700266943635,"duration":13},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-1]","1"],"tags":[]},{"name":"test Maximum subarray [8] [-2, -1], 1","uid":"ee66cb6c0133a3e1","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700266943671,"stop":1700266943673,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-2, -1]","1"],"tags":[]}],"uid":"695ea6ea5dee800d5d4f9590f68ac3d6"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}