{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: Lists differ: [[2, 2, 3], [7]] != []\n\nFirst list contains 2 additional elements.\nFirst extra element 0:\n[2, 2, 3]\n\n- [[2, 2, 3], [7]]\n+ []","children":[{"name":"test_1","uid":"e3d077558e22c65","parentUid":"9c36c0d89f9478629a8668ff735ae4a1","status":"failed","time":{"start":1690238457205,"stop":1690238457205,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"9c36c0d89f9478629a8668ff735ae4a1"},{"name":"AssertionError: Lists differ: [[2, 2, 2, 2], [2, 3, 3], [3, 5]] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n[2, 2, 2, 2]\n\n- [[2, 2, 2, 2], [2, 3, 3], [3, 5]]\n+ []","children":[{"name":"test_2","uid":"55e9398832cace7b","parentUid":"1b3f6a30bd56ce3366a2c0d71463b27d","status":"failed","time":{"start":1690238457235,"stop":1690238457235,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"1b3f6a30bd56ce3366a2c0d71463b27d"},{"name":"AssertionError: Lists differ: [[1]] != [[0]]\n\nFirst differing element 0:\n[1]\n[0]\n\n- [[1]]\n?   ^\n\n+ [[0]]\n?   ^","children":[{"name":"test_4","uid":"18f396568df93780","parentUid":"a8a7cd336e05f958baac176fc0cb66bf","status":"failed","time":{"start":1690238457240,"stop":1690238457240,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"a8a7cd336e05f958baac176fc0cb66bf"},{"name":"AssertionError: Lists differ: [[1, 1]] != [[0, 1]]\n\nFirst differing element 0:\n[1, 1]\n[0, 1]\n\n- [[1, 1]]\n?   ^\n\n+ [[0, 1]]\n?   ^","children":[{"name":"test_5","uid":"cc29546a230192aa","parentUid":"9e9e18b679ff66d0c9d4a05338b3055e","status":"failed","time":{"start":1690238457244,"stop":1690238457244,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"9e9e18b679ff66d0c9d4a05338b3055e"},{"name":"AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f7011a29c10>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f7011a29c10>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f7011a29c10>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f7011a29c10> = Solution()","children":[{"name":"test_degree_of_an_subarray[input_array0-2]","uid":"a76826cf77295fbe","parentUid":"cb1ffa66049855194d42705ab84ba196","status":"failed","time":{"start":1690238457278,"stop":1690238457278,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"]}],"uid":"cb1ffa66049855194d42705ab84ba196"},{"name":"AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f7011aa1730>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f7011aa1730>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f7011aa1730>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f7011aa1730> = Solution()","children":[{"name":"test_degree_of_an_subarray[input_array1-6]","uid":"a7c1d847092b243d","parentUid":"36f66b3845cf058ec87e718ba718cbb5","status":"failed","time":{"start":1690238457282,"stop":1690238457282,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"]}],"uid":"36f66b3845cf058ec87e718ba718cbb5"},{"name":"AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One","children":[{"name":"test_integer_to_english_words[1-One]","uid":"b1c5f02515eb70f","parentUid":"9123ab527d641dc38f1b3f28156694cf","status":"failed","time":{"start":1690238457336,"stop":1690238457337,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["'One'","1"]}],"uid":"9123ab527d641dc38f1b3f28156694cf"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","children":[{"name":"candidates = 2,3,6,7, target = 8, returns 2,2,3,7","uid":"f54c61b9bb1bb11f","parentUid":"c8dc970e3084b322200660b8b93459a7","status":"failed","time":{"start":1690238464379,"stop":1690238464395,"duration":16},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"c8dc970e3084b322200660b8b93459a7"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","children":[{"name":"candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","uid":"210bfbb28d344763","parentUid":"d6bb085e000a30b4c594de3ad9bd0168","status":"failed","time":{"start":1690238464404,"stop":1690238464406,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"d6bb085e000a30b4c594de3ad9bd0168"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","children":[{"name":"candidates = 2, target = 1, returns ","uid":"207e98bbf787fd46","parentUid":"d6777d56dd4deacebae2eaffe25a910f","status":"failed","time":{"start":1690238464408,"stop":1690238464409,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"d6777d56dd4deacebae2eaffe25a910f"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"candidates = 1, target = 1, returns 1","uid":"4d75f27a400c0e81","parentUid":"18486bf4495adb834cbda85366ca81f6","status":"failed","time":{"start":1690238464410,"stop":1690238464412,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"18486bf4495adb834cbda85366ca81f6"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"candidates = 1, target = 2, returns 1,1","uid":"c7002b550f6906a1","parentUid":"6cf77b292b0cf43d0edd2bed6cc06149","status":"failed","time":{"start":1690238464413,"stop":1690238464415,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"6cf77b292b0cf43d0edd2bed6cc06149"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0","children":[{"name":"inputArray = {inputArray} returns {expectedResult}","uid":"fa4a58443db8ff94","parentUid":"e1d94523ee7a5e0494ab47b09ca20494","status":"failed","time":{"start":1690238465363,"stop":1690238465369,"duration":6},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"e1d94523ee7a5e0494ab47b09ca20494"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0","children":[{"name":"inputArray = {inputArray} returns {expectedResult}","uid":"ea16d88165de5baa","parentUid":"3fa104e949e4dff04b2821d628f7edd7","status":"failed","time":{"start":1690238465375,"stop":1690238465376,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"3fa104e949e4dff04b2821d628f7edd7"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:6:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","children":[{"name":"case 01","uid":"384813e83d6e7442","parentUid":"80ec54a5eb12547673125d53132c38c3","status":"failed","time":{"start":1690238465729,"stop":1690238465743,"duration":14},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"80ec54a5eb12547673125d53132c38c3"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [1, 2]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 1, 2 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   1,\n                -   2,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:9:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","children":[{"name":"case 02","uid":"2240613e4c9641be","parentUid":"d36619d941a99f6913d5ce83fabc086b","status":"failed","time":{"start":1690238465743,"stop":1690238465745,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"d36619d941a99f6913d5ce83fabc086b"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:12:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41","children":[{"name":"case 03","uid":"f93e2d1aa167f19b","parentUid":"ba6673e5b21682426f2040c851338e02","status":"failed","time":{"start":1690238465745,"stop":1690238465747,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"ba6673e5b21682426f2040c851338e02"},{"name":"expected: <2> but was: <0>","children":[{"name":"shouldCalculateDegree(int[], int) [1] [1, 2, 2, 3, 1], 2","uid":"437cc67b7e6f97af","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1690238650546,"stop":1690238650664,"duration":118},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"]},{"name":"testDegreeOfAnArray(int[], int) [1] [1, 2, 2, 3, 1], 2","uid":"a7590a282165b6e4","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1690238651283,"stop":1690238651293,"duration":10},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"]},{"name":"shouldCalculateDegree(int[], int) [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2","uid":"db0c62c99ffdad23","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1690238652135,"stop":1690238652137,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"]}],"uid":"1b76bbb71605dc05c40417bab1c64cee"},{"name":"expected: <6> but was: <0>","children":[{"name":"shouldCalculateDegree(int[], int) [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"96fedb74971177af","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1690238650702,"stop":1690238650704,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"]},{"name":"testDegreeOfAnArray(int[], int) [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"ee364578a111dfe5","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1690238651326,"stop":1690238651332,"duration":6},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"]},{"name":"shouldCalculateDegree(int[], int) [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6","uid":"b0d134136cd1a543","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1690238652149,"stop":1690238652150,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"]}],"uid":"81358dd8b9856946968faa7abcb09861"},{"name":"expected: <1> but was: <-1>","children":[{"name":"shouldCalculateMaximumSubarray(int[], int) [7] [-1], 1","uid":"94d64a6e67531885","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1690238651467,"stop":1690238651474,"duration":7},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-1]","1"]},{"name":"shouldCalculateMaximumSubarray(int[], int) [8] [-2, -1], 1","uid":"fab6f90f81f28a6","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1690238651490,"stop":1690238651498,"duration":8},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-2, -1]","1"]}],"uid":"695ea6ea5dee800d5d4f9590f68ac3d6"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}