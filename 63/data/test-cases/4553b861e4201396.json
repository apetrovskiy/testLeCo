{
  "uid" : "4553b861e4201396",
  "name" : "test_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree[original0-cloned0-target0-expected_result0]",
  "fullName" : "src.test.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree#test_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree",
  "historyId" : "36ad12fa6b16a4c0fb77008ccb9be043",
  "time" : {
    "start" : 1618517884098,
    "stop" : 1618517884098,
    "duration" : 0
  },
  "status" : "skipped",
  "statusMessage" : "Skipped: TODO: no way of currently testing this",
  "statusTrace" : "('/home/runner/work/testLeCo/testLeCo/src/test/java/challenges/c20210101_20210107/FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree/test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree.py', 12, 'Skipped: TODO: no way of currently testing this')",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.skip(reason='TODO: no way of currently testing this')"
  }, {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree"
  }, {
    "name" : "suite",
    "value" : "test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree"
  }, {
    "name" : "host",
    "value" : "fv-az193-320"
  }, {
    "name" : "thread",
    "value" : "3112-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "cloned",
    "value" : "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fb688c0c220>"
  }, {
    "name" : "expected_result",
    "value" : "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fb688b36f10>"
  }, {
    "name" : "original",
    "value" : "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fb688c0ca00>"
  }, {
    "name" : "target",
    "value" : "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fb688bcefd0>"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 1,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "23a60875c8752c45",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/62//#testresult/23a60875c8752c45",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7ff9aa3246a0> == <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7ff9aa25e8e0>\n +  where <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7ff9aa25e8e0> = <bound method Solution.getTargetCopy of <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.Solution object at 0x7ff9aa25e8b0>>(<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7ff9aa3b0160>, <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7ff9aa3c3fa0>, <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7ff9aa324880>)\n +    where <bound method Solution.getTargetCopy of <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.Solution object at 0x7ff9aa25e8b0>> = <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.Solution object at 0x7ff9aa25e8b0>.getTargetCopy\n +      where <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.Solution object at 0x7ff9aa25e8b0> = Solution()",
        "time" : {
          "start" : 1618517597329,
          "stop" : 1618517597329,
          "duration" : 0
        }
      }, {
        "uid" : "bb598c0b09124615",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/61//#testresult/bb598c0b09124615",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fd3c1576580> == <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fd3c14ef580>\n +  where <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fd3c14ef580> = <bound method Solution.getTargetCopy of <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.Solution object at 0x7fd3c14ef910>>(<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fd3c1609c40>, <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fd3c160ed60>, <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fd3c160ee80>)\n +    where <bound method Solution.getTargetCopy of <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.Solution object at 0x7fd3c14ef910>> = <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.Solution object at 0x7fd3c14ef910>.getTargetCopy\n +      where <src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.Solution object at 0x7fd3c14ef910> = Solution()",
        "time" : {
          "start" : 1618517334902,
          "stop" : 1618517334902,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "@pytest.mark.skip(reason='TODO: no way of currently testing this')" ]
  },
  "source" : "4553b861e4201396.json",
  "parameterValues" : [ "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fb688c0c220>", "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fb688b36f10>", "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fb688c0ca00>", "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fb688bcefd0>" ]
}