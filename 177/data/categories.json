{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","children":[{"name":"candidates = 2,3,6,7, target = 8, returns 2,2,3,7","uid":"a7610e4e788c2ea7","parentUid":"c8dc970e3084b322200660b8b93459a7","status":"failed","time":{"start":1700258589923,"stop":1700258589929,"duration":6},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"c8dc970e3084b322200660b8b93459a7"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","children":[{"name":"candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","uid":"807fe90225b8105a","parentUid":"d6bb085e000a30b4c594de3ad9bd0168","status":"failed","time":{"start":1700258589932,"stop":1700258589934,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6bb085e000a30b4c594de3ad9bd0168"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","children":[{"name":"candidates = 2, target = 1, returns ","uid":"4f4a1d2ea452e4c1","parentUid":"d6777d56dd4deacebae2eaffe25a910f","status":"failed","time":{"start":1700258589934,"stop":1700258589935,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6777d56dd4deacebae2eaffe25a910f"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"candidates = 1, target = 1, returns 1","uid":"f9d29c758cd09921","parentUid":"18486bf4495adb834cbda85366ca81f6","status":"failed","time":{"start":1700258589936,"stop":1700258589937,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"18486bf4495adb834cbda85366ca81f6"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"candidates = 1, target = 2, returns 1,1","uid":"5fd481a648247f4c","parentUid":"6cf77b292b0cf43d0edd2bed6cc06149","status":"failed","time":{"start":1700258589937,"stop":1700258589938,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"6cf77b292b0cf43d0edd2bed6cc06149"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0","children":[{"name":"inputArray = {inputArray} returns {expectedResult}","uid":"dd1b03e6865a5c4b","parentUid":"e1d94523ee7a5e0494ab47b09ca20494","status":"failed","time":{"start":1700258590197,"stop":1700258590202,"duration":5},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"e1d94523ee7a5e0494ab47b09ca20494"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0","children":[{"name":"inputArray = {inputArray} returns {expectedResult}","uid":"72cc3af7656166a3","parentUid":"3fa104e949e4dff04b2821d628f7edd7","status":"failed","time":{"start":1700258590207,"stop":1700258590208,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3fa104e949e4dff04b2821d628f7edd7"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:6:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)","children":[{"name":"case 01","uid":"6c90432f0f4130c","parentUid":"5ce2cd701117b8668d91a8b7dd3925ac","status":"failed","time":{"start":1700258590223,"stop":1700258590230,"duration":7},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"5ce2cd701117b8668d91a8b7dd3925ac"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [1, 2]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 1, 2 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   1,\n                -   2,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:9:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)","children":[{"name":"case 02","uid":"e0e2c61bc3fd0c6c","parentUid":"5e0565f001a439ae7013a96b11646281","status":"failed","time":{"start":1700258590230,"stop":1700258590232,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"5e0565f001a439ae7013a96b11646281"},{"name":"assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:12:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)","children":[{"name":"case 03","uid":"1a58655090bf580b","parentUid":"15f1f0c0b294ee03e491117324073911","status":"failed","time":{"start":1700258590232,"stop":1700258590233,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"15f1f0c0b294ee03e491117324073911"},{"name":"AssertionError: Lists differ: [[2, 2, 3], [7]] != []\n\nFirst list contains 2 additional elements.\nFirst extra element 0:\n[2, 2, 3]\n\n- [[2, 2, 3], [7]]\n+ []","children":[{"name":"test_1","uid":"14c21dd832aabb7a","parentUid":"9c36c0d89f9478629a8668ff735ae4a1","status":"failed","time":{"start":1700258593274,"stop":1700258593274,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"9c36c0d89f9478629a8668ff735ae4a1"},{"name":"AssertionError: Lists differ: [[2, 2, 2, 2], [2, 3, 3], [3, 5]] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n[2, 2, 2, 2]\n\n- [[2, 2, 2, 2], [2, 3, 3], [3, 5]]\n+ []","children":[{"name":"test_2","uid":"e165a0e0c9a2396b","parentUid":"1b3f6a30bd56ce3366a2c0d71463b27d","status":"failed","time":{"start":1700258593302,"stop":1700258593302,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"1b3f6a30bd56ce3366a2c0d71463b27d"},{"name":"AssertionError: Lists differ: [[1]] != [[0]]\n\nFirst differing element 0:\n[1]\n[0]\n\n- [[1]]\n?   ^\n\n+ [[0]]\n?   ^","children":[{"name":"test_4","uid":"3cd8c31a25afdd2d","parentUid":"a8a7cd336e05f958baac176fc0cb66bf","status":"failed","time":{"start":1700258593307,"stop":1700258593307,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"a8a7cd336e05f958baac176fc0cb66bf"},{"name":"AssertionError: Lists differ: [[1, 1]] != [[0, 1]]\n\nFirst differing element 0:\n[1, 1]\n[0, 1]\n\n- [[1, 1]]\n?   ^\n\n+ [[0, 1]]\n?   ^","children":[{"name":"test_5","uid":"d05e04a38116c78a","parentUid":"9e9e18b679ff66d0c9d4a05338b3055e","status":"failed","time":{"start":1700258593311,"stop":1700258593312,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"9e9e18b679ff66d0c9d4a05338b3055e"},{"name":"AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f264214d940>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f264214d940>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f264214d940>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f264214d940> = Solution()","children":[{"name":"test_degree_of_an_subarray[input_array0-2]","uid":"3183befa45e1648f","parentUid":"32979cdd7c1f1e23bca00b97fd2f9e9c","status":"failed","time":{"start":1700258593341,"stop":1700258593341,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":[]}],"uid":"32979cdd7c1f1e23bca00b97fd2f9e9c"},{"name":"AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f26420cc160>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f26420cc160>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f26420cc160>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f26420cc160> = Solution()","children":[{"name":"test_degree_of_an_subarray[input_array1-6]","uid":"a62ce0acb25a9e48","parentUid":"3b422c1d0b08ea5637f9dd2613bf8eed","status":"failed","time":{"start":1700258593344,"stop":1700258593344,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":[]}],"uid":"3b422c1d0b08ea5637f9dd2613bf8eed"},{"name":"AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One","children":[{"name":"test_integer_to_english_words[1-One]","uid":"243f3c1a207bf116","parentUid":"9123ab527d641dc38f1b3f28156694cf","status":"failed","time":{"start":1700258593400,"stop":1700258593400,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["'One'","1"],"tags":[]}],"uid":"9123ab527d641dc38f1b3f28156694cf"},{"name":"expected: <1> but was: <-1>","children":[{"name":"shouldCalculateMaximumSubarray(int[], int) [7] [-1], 1","uid":"7520a0692e28ea15","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700258727091,"stop":1700258727114,"duration":23},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-1]","1"],"tags":[]},{"name":"shouldCalculateMaximumSubarray(int[], int) [8] [-2, -1], 1","uid":"c0d29fc9cfc6f272","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700258727149,"stop":1700258727151,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-2, -1]","1"],"tags":[]}],"uid":"695ea6ea5dee800d5d4f9590f68ac3d6"},{"name":"expected: <2> but was: <0>","children":[{"name":"shouldCalculateDegree(int[], int) [1] [1, 2, 2, 3, 1], 2","uid":"47a7060f8d61218d","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700258727313,"stop":1700258727423,"duration":110},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"testDegreeOfAnArray(int[], int) [1] [1, 2, 2, 3, 1], 2","uid":"5e77ebcdbe6eab24","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700258727554,"stop":1700258727576,"duration":22},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"shouldCalculateDegree(int[], int) [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2","uid":"c619046320705a2a","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700258727720,"stop":1700258727742,"duration":22},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":[]}],"uid":"1b76bbb71605dc05c40417bab1c64cee"},{"name":"expected: <6> but was: <0>","children":[{"name":"shouldCalculateDegree(int[], int) [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"f245299775e4609a","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700258727466,"stop":1700258727476,"duration":10},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"testDegreeOfAnArray(int[], int) [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"d6cbf033b82c5100","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700258727599,"stop":1700258727609,"duration":10},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"shouldCalculateDegree(int[], int) [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6","uid":"e4f92c408263af1e","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700258727759,"stop":1700258727781,"duration":22},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":[]}],"uid":"81358dd8b9856946968faa7abcb09861"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}