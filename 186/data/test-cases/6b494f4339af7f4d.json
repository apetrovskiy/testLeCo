{"uid":"6b494f4339af7f4d","name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","fullName":"problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest.shouldCalculateDegree","historyId":"3b7ecbc7b6c52c4ca68794e5670ef649","time":{"start":1700269448799,"stop":1700269448907,"duration":108},"description":"","status":"failed","statusMessage":"expected: <2> but was: <0>","statusTrace":"org.opentest4j.AssertionFailedError: expected: <2> but was: <0>\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:528)\n\tat problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest.shouldCalculateDegree(DegreeOfAnArrayTest.java:28)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat io.qameta.allure.junit5.AllureJunit5.interceptTestTemplateMethod(AllureJunit5.java:59)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.submit(ForkJoinPoolHierarchicalTestExecutorService.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:146)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest]/[test-template:shouldCalculateDegree(%5BI, int)]/[test-template-invocation:#1]"},{"name":"feature","value":"feature Easy"},{"name":"story","value":"story Degree of an array"},{"name":"epic","value":"epic Problems"},{"name":"host","value":"fv-az570-810"},{"name":"thread","value":"3346@fv-az570-810.ForkJoinPool-1-worker-1(18)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest"},{"name":"testClass","value":"problems.easy.DegreeOfAnArray.DegreeOfAnArrayTest"},{"name":"testMethod","value":"shouldCalculateDegree"},{"name":"suite","value":"suite Java"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"[1, 2, 2, 3, 1]"},{"name":"arg1","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":49,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":49},"items":[{"uid":"43eaa78b6f1c4242","reportUrl":"https://apetrovskiy.github.io/testLeCo/185//#testresult/43eaa78b6f1c4242","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700266942724,"stop":1700266942799,"duration":75}},{"uid":"175ce9b6dc07725c","reportUrl":"https://apetrovskiy.github.io/testLeCo/184//#testresult/175ce9b6dc07725c","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700264708393,"stop":1700264708509,"duration":116}},{"uid":"b4926a14db6baefb","reportUrl":"https://apetrovskiy.github.io/testLeCo/183//#testresult/b4926a14db6baefb","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700264419278,"stop":1700264419395,"duration":117}},{"uid":"43b437a6544308bd","reportUrl":"https://apetrovskiy.github.io/testLeCo/182//#testresult/43b437a6544308bd","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700263446543,"stop":1700263446654,"duration":111}},{"uid":"dd9bb7913b20a13f","reportUrl":"https://apetrovskiy.github.io/testLeCo/181//#testresult/dd9bb7913b20a13f","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700260789916,"stop":1700260790016,"duration":100}},{"uid":"76976c3079ed7f3f","reportUrl":"https://apetrovskiy.github.io/testLeCo/180//#testresult/76976c3079ed7f3f","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700260481231,"stop":1700260481329,"duration":98}},{"uid":"5bb0fae3afd92b0","reportUrl":"https://apetrovskiy.github.io/testLeCo/179//#testresult/5bb0fae3afd92b0","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700259991201,"stop":1700259991297,"duration":96}},{"uid":"16c65bb7c4a1052","reportUrl":"https://apetrovskiy.github.io/testLeCo/178//#testresult/16c65bb7c4a1052","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700258921302,"stop":1700258921381,"duration":79}},{"uid":"47a7060f8d61218d","reportUrl":"https://apetrovskiy.github.io/testLeCo/177//#testresult/47a7060f8d61218d","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700258727313,"stop":1700258727423,"duration":110}},{"uid":"c2e4f494f8e75c95","reportUrl":"https://apetrovskiy.github.io/testLeCo/176//#testresult/c2e4f494f8e75c95","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700257084604,"stop":1700257084743,"duration":139}},{"uid":"a250a329f3d89c74","reportUrl":"https://apetrovskiy.github.io/testLeCo/175//#testresult/a250a329f3d89c74","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700256375714,"stop":1700256375813,"duration":99}},{"uid":"9be352816ee6f85d","reportUrl":"https://apetrovskiy.github.io/testLeCo/174//#testresult/9be352816ee6f85d","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700256031200,"stop":1700256031327,"duration":127}},{"uid":"859208f0bc967c27","reportUrl":"https://apetrovskiy.github.io/testLeCo/173//#testresult/859208f0bc967c27","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700246293107,"stop":1700246293244,"duration":137}},{"uid":"d5b7b9dbec003612","reportUrl":"https://apetrovskiy.github.io/testLeCo/172//#testresult/d5b7b9dbec003612","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1700245989010,"stop":1700245989147,"duration":137}},{"uid":"15b849ab5213be6f","reportUrl":"https://apetrovskiy.github.io/testLeCo/170//#testresult/15b849ab5213be6f","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1699397411720,"stop":1699397411806,"duration":86}},{"uid":"d6eedaabd74143ba","reportUrl":"https://apetrovskiy.github.io/testLeCo/169//#testresult/d6eedaabd74143ba","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1695063927045,"stop":1695063927173,"duration":128}},{"uid":"437cc67b7e6f97af","reportUrl":"https://apetrovskiy.github.io/testLeCo/168//#testresult/437cc67b7e6f97af","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1690238650546,"stop":1690238650664,"duration":118}},{"uid":"d63e5aaf752c9014","reportUrl":"https://apetrovskiy.github.io/testLeCo/167//#testresult/d63e5aaf752c9014","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1690236716420,"stop":1690236716628,"duration":208}},{"uid":"a2f619b65c58c67a","reportUrl":"https://apetrovskiy.github.io/testLeCo/166//#testresult/a2f619b65c58c67a","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1690232587750,"stop":1690232587892,"duration":142}},{"uid":"33bd12d30608166a","reportUrl":"https://apetrovskiy.github.io/testLeCo/165//#testresult/33bd12d30608166a","status":"failed","statusDetails":"expected: <2> but was: <0>","time":{"start":1690231651589,"stop":1690231651750,"duration":161}}]},"tags":[]},"source":"6b494f4339af7f4d.json","parameterValues":["[1, 2, 2, 3, 1]","2"]}