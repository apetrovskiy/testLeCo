{
  "uid" : "51d82f2cb65200b6",
  "name" : "candidates = 2, target = 1, returns ",
  "fullName" : "combinationSum([ 2, [length]: 1 ], 1) should equal NaN.candidates = 2, target = 1, returns ",
  "historyId" : "b98ca059c42413c8cce95938cf12201",
  "time" : {
    "start" : 1620949494226,
    "stop" : 1620949494228,
    "duration" : 2
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
  "statusTrace" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/challenges/c20201001_20201007/CombinationSum/combination_sum.test.js:35:56)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "combinationSum([ 2, [length]: 1 ], 1) should equal NaN"
  }, {
    "name" : "testClass",
    "value" : "combinationSum([ 2, [length]: 1 ], 1) should equal NaN"
  }, {
    "name" : "testMethod",
    "value" : "candidates = 2, target = 1, returns "
  }, {
    "name" : "package",
    "value" : "combinationSum([ 2, [length]: 1 ], 1) should equal NaN"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 10,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "73d98fb9f8719939",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/88//#testresult/73d98fb9f8719939",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620949480845,
          "stop" : 1620949480847,
          "duration" : 2
        }
      }, {
        "uid" : "c50dc2408038199d",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/86//#testresult/c50dc2408038199d",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620949289863,
          "stop" : 1620949289865,
          "duration" : 2
        }
      }, {
        "uid" : "e1535ee62157a67d",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/85//#testresult/e1535ee62157a67d",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620949268532,
          "stop" : 1620949268534,
          "duration" : 2
        }
      }, {
        "uid" : "4c90b260227d59f0",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/84//#testresult/4c90b260227d59f0",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620948935454,
          "stop" : 1620948935456,
          "duration" : 2
        }
      }, {
        "uid" : "df471ce50854126d",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/83//#testresult/df471ce50854126d",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620935845346,
          "stop" : 1620935845347,
          "duration" : 1
        }
      }, {
        "uid" : "edc5be6929023734",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/82//#testresult/edc5be6929023734",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620933763552,
          "stop" : 1620933763554,
          "duration" : 2
        }
      }, {
        "uid" : "36e77abf79100502",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/81//#testresult/36e77abf79100502",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620932211947,
          "stop" : 1620932211949,
          "duration" : 2
        }
      }, {
        "uid" : "69ead082e1a4a1f3",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/77//#testresult/69ead082e1a4a1f3",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620928268330,
          "stop" : 1620928268332,
          "duration" : 2
        }
      }, {
        "uid" : "4a88b700cd5accf9",
        "reportUrl" : "https://apetrovskiy.github.io/testLeCo/76//#testresult/4a88b700cd5accf9",
        "status" : "failed",
        "statusDetails" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
        "time" : {
          "start" : 1620921941097,
          "stop" : 1620921941099,
          "duration" : 2
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "51d82f2cb65200b6.json",
  "parameterValues" : [ ]
}