{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Product defects",
    "children" : [ {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]",
      "children" : [ {
        "name" : "candidates = 2,3,6,7, target = 8, returns 2,2,3,7",
        "uid" : "b4e7fbd22a3088f",
        "parentUid" : "c8dc970e3084b322200660b8b93459a7",
        "status" : "failed",
        "time" : {
          "start" : 1622040430891,
          "stop" : 1622040430902,
          "duration" : 11
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "c8dc970e3084b322200660b8b93459a7"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]",
      "children" : [ {
        "name" : "candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5",
        "uid" : "8c9f4886825567b5",
        "parentUid" : "d6bb085e000a30b4c594de3ad9bd0168",
        "status" : "failed",
        "time" : {
          "start" : 1622040430909,
          "stop" : 1622040430912,
          "duration" : 3
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "d6bb085e000a30b4c594de3ad9bd0168"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]",
      "children" : [ {
        "name" : "candidates = 2, target = 1, returns ",
        "uid" : "24f136ff4739ab52",
        "parentUid" : "d6777d56dd4deacebae2eaffe25a910f",
        "status" : "failed",
        "time" : {
          "start" : 1622040430914,
          "stop" : 1622040430916,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "d6777d56dd4deacebae2eaffe25a910f"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
      "children" : [ {
        "name" : "candidates = 1, target = 1, returns 1",
        "uid" : "e045fc0e51dd3e49",
        "parentUid" : "18486bf4495adb834cbda85366ca81f6",
        "status" : "failed",
        "time" : {
          "start" : 1622040430918,
          "stop" : 1622040430920,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "18486bf4495adb834cbda85366ca81f6"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]",
      "children" : [ {
        "name" : "candidates = 1, target = 2, returns 1,1",
        "uid" : "cc808417a467d10d",
        "parentUid" : "6cf77b292b0cf43d0edd2bed6cc06149",
        "status" : "failed",
        "time" : {
          "start" : 1622040430921,
          "stop" : 1622040430923,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "6cf77b292b0cf43d0edd2bed6cc06149"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0",
      "children" : [ {
        "name" : "inputArray = {inputArray} returns {expectedResult}",
        "uid" : "17224c139a856fbc",
        "parentUid" : "e1d94523ee7a5e0494ab47b09ca20494",
        "status" : "failed",
        "time" : {
          "start" : 1622040431490,
          "stop" : 1622040431492,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "e1d94523ee7a5e0494ab47b09ca20494"
    }, {
      "name" : "Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0",
      "children" : [ {
        "name" : "inputArray = {inputArray} returns {expectedResult}",
        "uid" : "b710b1b15917c627",
        "parentUid" : "3fa104e949e4dff04b2821d628f7edd7",
        "status" : "failed",
        "time" : {
          "start" : 1622040431494,
          "stop" : 1622040431494,
          "duration" : 0
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "3fa104e949e4dff04b2821d628f7edd7"
    }, {
      "name" : "assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:6:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
      "children" : [ {
        "name" : "case 01",
        "uid" : "23f1f38e2776649e",
        "parentUid" : "80ec54a5eb12547673125d53132c38c3",
        "status" : "failed",
        "time" : {
          "start" : 1622040431681,
          "stop" : 1622040431686,
          "duration" : 5
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "80ec54a5eb12547673125d53132c38c3"
    }, {
      "name" : "assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [1, 2]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 1, 2 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   1,\n                -   2,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:9:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
      "children" : [ {
        "name" : "case 02",
        "uid" : "6a5eef5d18cfc449",
        "parentUid" : "d36619d941a99f6913d5ce83fabc086b",
        "status" : "failed",
        "time" : {
          "start" : 1622040431686,
          "stop" : 1622040431687,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "d36619d941a99f6913d5ce83fabc086b"
    }, {
      "name" : "assert.deepStrictEqual(received, expected)\n                \n                Expected value to deeply and strictly equal to:\n                  [0, 1]\n                Received:\n                  []\n                \n                Message:\n                  expected [] to equal [ 0, 1 ]\n                \n                Difference:\n                \n                - Expected\n                + Received\n                \n                - Array [\n                -   0,\n                -   1,\n                - ]\n                + Array []\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/problems/easy/TwoSum/two_sum.test.js:12:16)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41",
      "children" : [ {
        "name" : "case 03",
        "uid" : "7b5f4a14244e71f4",
        "parentUid" : "ba6673e5b21682426f2040c851338e02",
        "status" : "failed",
        "time" : {
          "start" : 1622040431687,
          "stop" : 1622040431688,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "ba6673e5b21682426f2040c851338e02"
    }, {
      "name" : "AssertionError: Lists differ: [[2, 2, 3], [7]] != []\n\nFirst list contains 2 additional elements.\nFirst extra element 0:\n[2, 2, 3]\n\n- [[2, 2, 3], [7]]\n+ []",
      "children" : [ {
        "name" : "test_1",
        "uid" : "95fec8214b487409",
        "parentUid" : "9c36c0d89f9478629a8668ff735ae4a1",
        "status" : "failed",
        "time" : {
          "start" : 1622040439953,
          "stop" : 1622040439954,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "9c36c0d89f9478629a8668ff735ae4a1"
    }, {
      "name" : "AssertionError: Lists differ: [[2, 2, 2, 2], [2, 3, 3], [3, 5]] != []\n\nFirst list contains 3 additional elements.\nFirst extra element 0:\n[2, 2, 2, 2]\n\n- [[2, 2, 2, 2], [2, 3, 3], [3, 5]]\n+ []",
      "children" : [ {
        "name" : "test_2",
        "uid" : "3758080e9db745fc",
        "parentUid" : "1b3f6a30bd56ce3366a2c0d71463b27d",
        "status" : "failed",
        "time" : {
          "start" : 1622040439991,
          "stop" : 1622040439992,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "1b3f6a30bd56ce3366a2c0d71463b27d"
    }, {
      "name" : "AssertionError: Lists differ: [[1]] != [[0]]\n\nFirst differing element 0:\n[1]\n[0]\n\n- [[1]]\n?   ^\n\n+ [[0]]\n?   ^",
      "children" : [ {
        "name" : "test_4",
        "uid" : "77e7cd7cd1106d1d",
        "parentUid" : "a8a7cd336e05f958baac176fc0cb66bf",
        "status" : "failed",
        "time" : {
          "start" : 1622040439998,
          "stop" : 1622040439998,
          "duration" : 0
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "a8a7cd336e05f958baac176fc0cb66bf"
    }, {
      "name" : "AssertionError: Lists differ: [[1, 1]] != [[0, 1]]\n\nFirst differing element 0:\n[1, 1]\n[0, 1]\n\n- [[1, 1]]\n?   ^\n\n+ [[0, 1]]\n?   ^",
      "children" : [ {
        "name" : "test_5",
        "uid" : "a596b7780a644ce3",
        "parentUid" : "9e9e18b679ff66d0c9d4a05338b3055e",
        "status" : "failed",
        "time" : {
          "start" : 1622040440003,
          "stop" : 1622040440004,
          "duration" : 1
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "9e9e18b679ff66d0c9d4a05338b3055e"
    }, {
      "name" : "AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f2ef3d73550>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f2ef3d73550>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f2ef3d73550>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f2ef3d73550> = Solution()",
      "children" : [ {
        "name" : "test_degree_of_an_subarray[input_array0-2]",
        "uid" : "416eccb3edfa5afd",
        "parentUid" : "6a868e08618d6e29ca9f07fa66440ea4",
        "status" : "failed",
        "time" : {
          "start" : 1622040440048,
          "stop" : 1622040440048,
          "duration" : 0
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ "2", "[1, 2, 2, 3, 1]" ]
      } ],
      "uid" : "6a868e08618d6e29ca9f07fa66440ea4"
    }, {
      "name" : "AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f2ef3e4c1c0>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f2ef3e4c1c0>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f2ef3e4c1c0>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f2ef3e4c1c0> = Solution()",
      "children" : [ {
        "name" : "test_degree_of_an_subarray[input_array1-6]",
        "uid" : "a7ea895644314ddb",
        "parentUid" : "3473dbe58045e246c4ae95aacec5fb8a",
        "status" : "failed",
        "time" : {
          "start" : 1622040440053,
          "stop" : 1622040440053,
          "duration" : 0
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ "6", "[1, 2, 2, 3, 1, 4, 2]" ]
      } ],
      "uid" : "3473dbe58045e246c4ae95aacec5fb8a"
    }, {
      "name" : "AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One",
      "children" : [ {
        "name" : "test_integer_to_english_words[1-One]",
        "uid" : "393ced56e5e6890d",
        "parentUid" : "9123ab527d641dc38f1b3f28156694cf",
        "status" : "failed",
        "time" : {
          "start" : 1622040440128,
          "stop" : 1622040440128,
          "duration" : 0
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ "'One'", "1" ]
      } ],
      "uid" : "9123ab527d641dc38f1b3f28156694cf"
    }, {
      "name" : "expected: <2> but was: <0>",
      "children" : [ {
        "name" : "[1] [1, 2, 2, 3, 1], 2",
        "uid" : "dd9e2e6a46cea822",
        "parentUid" : "1b76bbb71605dc05c40417bab1c64cee",
        "status" : "failed",
        "time" : {
          "start" : 1622040608365,
          "stop" : 1622040608413,
          "duration" : 48
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[1] [1, 2, 2, 3, 1], 2",
        "uid" : "3cebf843a387296a",
        "parentUid" : "1b76bbb71605dc05c40417bab1c64cee",
        "status" : "failed",
        "time" : {
          "start" : 1622040608986,
          "stop" : 1622040608995,
          "duration" : 9
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[1] inputArray=[1, 2, 2, 3, 1], expectedResult=2",
        "uid" : "7dfac8379641fa89",
        "parentUid" : "1b76bbb71605dc05c40417bab1c64cee",
        "status" : "failed",
        "time" : {
          "start" : 1622040609410,
          "stop" : 1622040609440,
          "duration" : 30
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "1b76bbb71605dc05c40417bab1c64cee"
    }, {
      "name" : "expected: <6> but was: <0>",
      "children" : [ {
        "name" : "[2] [1, 2, 2, 3, 1, 4, 2], 6",
        "uid" : "36d1d55a549ece31",
        "parentUid" : "81358dd8b9856946968faa7abcb09861",
        "status" : "failed",
        "time" : {
          "start" : 1622040608464,
          "stop" : 1622040608475,
          "duration" : 11
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[2] [1, 2, 2, 3, 1, 4, 2], 6",
        "uid" : "dbd01ffc630b233",
        "parentUid" : "81358dd8b9856946968faa7abcb09861",
        "status" : "failed",
        "time" : {
          "start" : 1622040609014,
          "stop" : 1622040609026,
          "duration" : 12
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6",
        "uid" : "97dd37b03e0424ab",
        "parentUid" : "81358dd8b9856946968faa7abcb09861",
        "status" : "failed",
        "time" : {
          "start" : 1622040609465,
          "stop" : 1622040609477,
          "duration" : 12
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "81358dd8b9856946968faa7abcb09861"
    }, {
      "name" : "expected: <1> but was: <-1>",
      "children" : [ {
        "name" : "[7] [-1], 1",
        "uid" : "f0ba04c90ec33206",
        "parentUid" : "695ea6ea5dee800d5d4f9590f68ac3d6",
        "status" : "failed",
        "time" : {
          "start" : 1622040609414,
          "stop" : 1622040609416,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "[8] [-2, -1], 1",
        "uid" : "6594b9a2c4374379",
        "parentUid" : "695ea6ea5dee800d5d4f9590f68ac3d6",
        "status" : "failed",
        "time" : {
          "start" : 1622040609437,
          "stop" : 1622040609439,
          "duration" : 2
        },
        "flaky" : false,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "695ea6ea5dee800d5d4f9590f68ac3d6"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}