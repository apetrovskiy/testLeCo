{"uid":"3727cd25879d7786","name":"candidates = 2, target = 1, returns ","fullName":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN.candidates = 2, target = 1, returns ","historyId":"b98ca059c42413c8cce95938cf12201","time":{"start":1700255873195,"stop":1700255873197,"duration":2},"description":"","descriptionHtml":"","status":"failed","statusMessage":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","statusTrace":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/challenges/c20201001_20201007/CombinationSum/combination_sum.test.js:35:56)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"testClass","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"testMethod","value":"candidates = 2, target = 1, returns "},{"name":"package","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"resultFormat","value":"allure1"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":90,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":90},"items":[{"uid":"caa008d960b58821","reportUrl":"https://apetrovskiy.github.io/testLeCo/173//#testresult/caa008d960b58821","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1700246137015,"stop":1700246137016,"duration":1}},{"uid":"ccf80f66daa431f6","reportUrl":"https://apetrovskiy.github.io/testLeCo/172//#testresult/ccf80f66daa431f6","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1700245806084,"stop":1700245806086,"duration":2}},{"uid":"46cef64a0281ce36","reportUrl":"https://apetrovskiy.github.io/testLeCo/170//#testresult/46cef64a0281ce36","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1699397254485,"stop":1699397254487,"duration":2}},{"uid":"207e98bbf787fd46","reportUrl":"https://apetrovskiy.github.io/testLeCo/168//#testresult/207e98bbf787fd46","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1690238464408,"stop":1690238464409,"duration":1}},{"uid":"d3855dc7677f39f","reportUrl":"https://apetrovskiy.github.io/testLeCo/167//#testresult/d3855dc7677f39f","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1690236497918,"stop":1690236497919,"duration":1}},{"uid":"5d346238dfa171c3","reportUrl":"https://apetrovskiy.github.io/testLeCo/166//#testresult/5d346238dfa171c3","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1690232374800,"stop":1690232374801,"duration":1}},{"uid":"f8ae61c8df004fd","reportUrl":"https://apetrovskiy.github.io/testLeCo/165//#testresult/f8ae61c8df004fd","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1690231438092,"stop":1690231438093,"duration":1}},{"uid":"f1f17c176095461f","reportUrl":"https://apetrovskiy.github.io/testLeCo/164//#testresult/f1f17c176095461f","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1690229978777,"stop":1690229978778,"duration":1}},{"uid":"36e19490ecfb126","reportUrl":"https://apetrovskiy.github.io/testLeCo/163//#testresult/36e19490ecfb126","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1690221987549,"stop":1690221987550,"duration":1}},{"uid":"992809bfbdb0e1f2","reportUrl":"https://apetrovskiy.github.io/testLeCo/162//#testresult/992809bfbdb0e1f2","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1690198207588,"stop":1690198207599,"duration":11}},{"uid":"d37c884462964005","reportUrl":"https://apetrovskiy.github.io/testLeCo/161//#testresult/d37c884462964005","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689529876116,"stop":1689529876117,"duration":1}},{"uid":"d1a87ee735d48100","reportUrl":"https://apetrovskiy.github.io/testLeCo/160//#testresult/d1a87ee735d48100","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689528148932,"stop":1689528148933,"duration":1}},{"uid":"d281eb4401488be7","reportUrl":"https://apetrovskiy.github.io/testLeCo/159//#testresult/d281eb4401488be7","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689520436351,"stop":1689520436352,"duration":1}},{"uid":"94406f72ad9338b8","reportUrl":"https://apetrovskiy.github.io/testLeCo/158//#testresult/94406f72ad9338b8","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689519353812,"stop":1689519353813,"duration":1}},{"uid":"af6fb57092ca2c3a","reportUrl":"https://apetrovskiy.github.io/testLeCo/157//#testresult/af6fb57092ca2c3a","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689518670653,"stop":1689518670654,"duration":1}},{"uid":"998f58160054280b","reportUrl":"https://apetrovskiy.github.io/testLeCo/156//#testresult/998f58160054280b","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689517953081,"stop":1689517953083,"duration":2}},{"uid":"602b7dd5fbfe5962","reportUrl":"https://apetrovskiy.github.io/testLeCo/155//#testresult/602b7dd5fbfe5962","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1689514653944,"stop":1689514653946,"duration":2}},{"uid":"6b02bac371a91347","reportUrl":"https://apetrovskiy.github.io/testLeCo/154//#testresult/6b02bac371a91347","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688148999035,"stop":1688148999036,"duration":1}},{"uid":"54ce682b393ad8cb","reportUrl":"https://apetrovskiy.github.io/testLeCo/153//#testresult/54ce682b393ad8cb","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688146952070,"stop":1688146952071,"duration":1}},{"uid":"e869620603773f07","reportUrl":"https://apetrovskiy.github.io/testLeCo/152//#testresult/e869620603773f07","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1688145982319,"stop":1688145982320,"duration":1}}]},"tags":[]},"source":"3727cd25879d7786.json","parameterValues":[]}