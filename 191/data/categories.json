{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","children":[{"name":"test Combination sum: candidates = 2,3,6,7, target = 8, returns 2,2,3,7","uid":"e13a3c5936cb3a4b","parentUid":"c8dc970e3084b322200660b8b93459a7","status":"failed","time":{"start":1700271308968,"stop":1700271308978,"duration":10},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"c8dc970e3084b322200660b8b93459a7"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","children":[{"name":"test Combination sum: candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","uid":"c2fd845a1e0943ba","parentUid":"d6bb085e000a30b4c594de3ad9bd0168","status":"failed","time":{"start":1700271308985,"stop":1700271308986,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6bb085e000a30b4c594de3ad9bd0168"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","children":[{"name":"test Combination sum: candidates = 2, target = 1, returns ","uid":"9c483b592bba2178","parentUid":"d6777d56dd4deacebae2eaffe25a910f","status":"failed","time":{"start":1700271308988,"stop":1700271308989,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6777d56dd4deacebae2eaffe25a910f"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"test Combination sum: candidates = 1, target = 1, returns 1","uid":"96eeb2064750fd10","parentUid":"18486bf4495adb834cbda85366ca81f6","status":"failed","time":{"start":1700271308990,"stop":1700271308992,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"18486bf4495adb834cbda85366ca81f6"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"test Combination sum: candidates = 1, target = 2, returns 1,1","uid":"2afdd71b0fce7882","parentUid":"6cf77b292b0cf43d0edd2bed6cc06149","status":"failed","time":{"start":1700271308993,"stop":1700271308994,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"6cf77b292b0cf43d0edd2bed6cc06149"},{"name":"ReferenceError: assert is not defined","children":[{"name":"case 01","uid":"24ba176e457df6b9","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700271309033,"stop":1700271309035,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"case 02","uid":"3adb44cb446507","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700271309036,"stop":1700271309036,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"case 03","uid":"4dc95ff1a8b08bd0","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700271309036,"stop":1700271309037,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"a9dc2694a3b8143090badc0acddfd14d"},{"name":"You are trying to make an assertion, but haven't registered Gomega's fail handler.\nIf you're using Ginkgo then you probably forgot to put your assertion in an It().\nAlternatively, you may have forgotten to register a fail handler with RegisterFailHandler() or RegisterTestingT().\nDepending on your vendoring solution you may be inadvertently importing gomega and subpackages (e.g. ghhtp, gexec,...) from different locations.\n","children":[{"name":"Step Bit Counting","uid":"9326f6d57cb24fb9","parentUid":"2c18236b6d9726bfcba111e39184c27c","status":"failed","time":{"start":1700271309038,"stop":1700271309038,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":7,"retriesStatusChange":true,"parameters":[],"tags":[]}],"uid":"2c18236b6d9726bfcba111e39184c27c"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0","children":[{"name":"test Degree of an array: inputArray = {inputArray} returns {expectedResult}","uid":"dcd9974ea3b53f95","parentUid":"e1d94523ee7a5e0494ab47b09ca20494","status":"failed","time":{"start":1700271309263,"stop":1700271309268,"duration":5},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"e1d94523ee7a5e0494ab47b09ca20494"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0","children":[{"name":"test Degree of an array: inputArray = {inputArray} returns {expectedResult}","uid":"9394588af78fc86c","parentUid":"3fa104e949e4dff04b2821d628f7edd7","status":"failed","time":{"start":1700271309274,"stop":1700271309275,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3fa104e949e4dff04b2821d628f7edd7"},{"name":"AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f308a107f80>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f308a107f80>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f308a107f80>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f308a107f80> = Solution()","children":[{"name":"test Python","uid":"60a821f07c12f3e","parentUid":"6e717833d03c719b4c4fd85a017e0025","status":"failed","time":{"start":1700271316587,"stop":1700271316587,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":["tag Python"]}],"uid":"6e717833d03c719b4c4fd85a017e0025"},{"name":"AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f308a106ea0>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f308a106ea0>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f308a106ea0>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f308a106ea0> = Solution()","children":[{"name":"test Python","uid":"fb634b50cc1fba9b","parentUid":"1d1b7fd8f1fe0535142837935eab056b","status":"failed","time":{"start":1700271316591,"stop":1700271316591,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":["tag Python"]}],"uid":"1d1b7fd8f1fe0535142837935eab056b"},{"name":"AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One","children":[{"name":"test Python","uid":"9aaa515088187069","parentUid":"9123ab527d641dc38f1b3f28156694cf","status":"failed","time":{"start":1700271316643,"stop":1700271316643,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["'One'","1"],"tags":["tag Python"]}],"uid":"9123ab527d641dc38f1b3f28156694cf"},{"name":"expected: <2> but was: <0>","children":[{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"91eed7a52603dbfb","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700271487440,"stop":1700271487550,"duration":110},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"46a61f59aaf78bb6","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700271487675,"stop":1700271487693,"duration":18},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2","uid":"3f19bff37da8b6c9","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700271487829,"stop":1700271487851,"duration":22},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":[]}],"uid":"1b76bbb71605dc05c40417bab1c64cee"},{"name":"expected: <6> but was: <0>","children":[{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"d183925891ececb4","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700271487573,"stop":1700271487592,"duration":19},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"fdeb03a615241780","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700271487737,"stop":1700271487751,"duration":14},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6","uid":"c3f949810f0ed881","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700271487881,"stop":1700271487889,"duration":8},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":[]}],"uid":"81358dd8b9856946968faa7abcb09861"},{"name":"expected: <1> but was: <-1>","children":[{"name":"test Maximum subarray [7] [-1], 1","uid":"a18526023f44d7f6","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700271487830,"stop":1700271487854,"duration":24},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-1]","1"],"tags":[]},{"name":"test Maximum subarray [8] [-2, -1], 1","uid":"a5f01c56e9ae6680","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700271487887,"stop":1700271487890,"duration":3},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-2, -1]","1"],"tags":[]}],"uid":"695ea6ea5dee800d5d4f9590f68ac3d6"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"AttributeError: 'SolutionTest' object has no attribute 'assertEquals'. Did you mean: 'assertEqual'?","children":[{"name":"test Combination sum 01","uid":"879fc654e3edd2d1","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700271316488,"stop":1700271316489,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 02","uid":"d3d52ea1355661a6","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700271316521,"stop":1700271316521,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 03","uid":"1832a1a4c6be822a","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700271316530,"stop":1700271316530,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 04","uid":"3fc6b77ea64eb35c","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700271316539,"stop":1700271316540,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 05","uid":"f0143ae0e2cb4269","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700271316548,"stop":1700271316548,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]}],"uid":"8b28b79d3c747cdf21e370fc8cdc4919"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}