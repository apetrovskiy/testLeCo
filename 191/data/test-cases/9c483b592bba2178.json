{"uid":"9c483b592bba2178","name":"test Combination sum: candidates = 2, target = 1, returns ","fullName":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN.test Combination sum: candidates = 2, target = 1, returns ","historyId":"d3c932b6f0f02e2003e6bc69ab7bb75f","time":{"start":1700271308988,"stop":1700271308989,"duration":1},"description":"test Combination sum","descriptionHtml":"<p>test Combination sum</p>\n","status":"failed","statusMessage":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","statusTrace":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]\n                    at Object.<anonymous> (/home/runner/work/testLeCo/testLeCo/src/main/java/challenges/c20201001_20201007/CombinationSum/combination_sum.test.js:28:50)\n                    at Object.asyncJestTest (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n                    at new Promise (<anonymous>)\n                    at mapper (/home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n                    at /home/runner/work/testLeCo/testLeCo/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"epic Challenges"},{"name":"feature","value":"feature 20201001-20201007"},{"name":"story","value":"story Combination sum"},{"name":"suite","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"testClass","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"testMethod","value":"test Combination sum: candidates = 2, target = 1, returns "},{"name":"package","value":"combinationSum([ 2, [length]: 1 ], 1) should equal NaN"},{"name":"resultFormat","value":"allure1"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"267e149e0cbdce7c","reportUrl":"https://apetrovskiy.github.io/testLeCo/190//#testresult/267e149e0cbdce7c","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1700270685927,"stop":1700270685927,"duration":0}},{"uid":"7b91601db1c6c363","reportUrl":"https://apetrovskiy.github.io/testLeCo/189//#testresult/7b91601db1c6c363","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1700270562410,"stop":1700270562411,"duration":1}},{"uid":"5ea76d8663ed19fc","reportUrl":"https://apetrovskiy.github.io/testLeCo/188//#testresult/5ea76d8663ed19fc","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1700270343703,"stop":1700270343704,"duration":1}},{"uid":"5a8475c5a7966e49","reportUrl":"https://apetrovskiy.github.io/testLeCo/187//#testresult/5a8475c5a7966e49","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1700269707209,"stop":1700269707210,"duration":1}},{"uid":"cff250eff28b0cbe","reportUrl":"https://apetrovskiy.github.io/testLeCo/186//#testresult/cff250eff28b0cbe","status":"failed","statusDetails":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","time":{"start":1700269257403,"stop":1700269257404,"duration":1}}]},"tags":[]},"source":"9c483b592bba2178.json","parameterValues":[]}