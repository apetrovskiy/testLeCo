{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"ReferenceError: assert is not defined","children":[{"name":"case 01","uid":"ac2d80a748e0a276","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700324006666,"stop":1700324006668,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"case 02","uid":"7d1d417316194ec5","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700324006668,"stop":1700324006668,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]},{"name":"case 03","uid":"cde4fb963d47aa4e","parentUid":"a9dc2694a3b8143090badc0acddfd14d","status":"failed","time":{"start":1700324006668,"stop":1700324006669,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"a9dc2694a3b8143090badc0acddfd14d"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 6\n                + Received  + 2\n                \n                  Array [\n                +   Array [],\n                    Array [\n                -     2,\n                -     2,\n                -     3,\n                -   ],\n                -   Array [\n                -     7,\n                +     0,\n                    ],\n                  ]","children":[{"name":"test Combination sum: candidates = 2,3,6,7, target = 8, returns 2,2,3,7","uid":"d483639220df0485","parentUid":"c8dc970e3084b322200660b8b93459a7","status":"failed","time":{"start":1700324006699,"stop":1700324006704,"duration":5},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"c8dc970e3084b322200660b8b93459a7"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 13\n                + Received  +  2\n                \n                  Array [\n                -   Array [\n                -     2,\n                -     2,\n                -     2,\n                -     2,\n                -   ],\n                -   Array [\n                -     2,\n                -     3,\n                -     3,\n                -   ],\n                +   Array [],\n                    Array [\n                -     3,\n                -     5,\n                +     0,\n                    ],\n                  ]","children":[{"name":"test Combination sum: candidates = 2,3,5, target = 8, returns 2,2,2,2,2,3,3,3,5","uid":"a9573bbc01f6375f","parentUid":"d6bb085e000a30b4c594de3ad9bd0168","status":"failed","time":{"start":1700324006711,"stop":1700324006713,"duration":2},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6bb085e000a30b4c594de3ad9bd0168"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 1\n                + Received  + 4\n                \n                - Array []\n                + Array [\n                +   Array [],\n                +   Array [],\n                + ]","children":[{"name":"test Combination sum: candidates = 2, target = 1, returns ","uid":"c91103fc7d7c978c","parentUid":"d6777d56dd4deacebae2eaffe25a910f","status":"failed","time":{"start":1700324006714,"stop":1700324006715,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"d6777d56dd4deacebae2eaffe25a910f"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 3\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"test Combination sum: candidates = 1, target = 1, returns 1","uid":"1493b225b56256c9","parentUid":"18486bf4495adb834cbda85366ca81f6","status":"failed","time":{"start":1700324006717,"stop":1700324006718,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"18486bf4495adb834cbda85366ca81f6"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                - Expected  - 4\n                + Received  + 1\n                \n                  Array [\n                -   Array [\n                -     1,\n                -     1,\n                -   ],\n                +   Array [],\n                  ]","children":[{"name":"test Combination sum: candidates = 1, target = 2, returns 1,1","uid":"cb38f6b9c0d5cc95","parentUid":"6cf77b292b0cf43d0edd2bed6cc06149","status":"failed","time":{"start":1700324006719,"stop":1700324006720,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"6cf77b292b0cf43d0edd2bed6cc06149"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 2\n                Received: 0","children":[{"name":"test Degree of an array: inputArray = {inputArray} returns {expectedResult}","uid":"40fd62364de9963f","parentUid":"e1d94523ee7a5e0494ab47b09ca20494","status":"failed","time":{"start":1700324006944,"stop":1700324006947,"duration":3},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"e1d94523ee7a5e0494ab47b09ca20494"},{"name":"Error: expect(received).toEqual(expected) // deep equality\n                \n                Expected: 6\n                Received: 0","children":[{"name":"test Degree of an array: inputArray = {inputArray} returns {expectedResult}","uid":"777c36a13057dd90","parentUid":"3fa104e949e4dff04b2821d628f7edd7","status":"failed","time":{"start":1700324007007,"stop":1700324007008,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":[]}],"uid":"3fa104e949e4dff04b2821d628f7edd7"},{"children":[{"name":"Maximum Subarray","uid":"978900e23675c215","parentUid":"666d1a31450af3ae8459f14f07f9a1b4","status":"failed","time":{"start":1700324023876,"stop":1700324023876,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":7,"retriesStatusChange":true,"parameters":[],"tags":[]}],"uid":"666d1a31450af3ae8459f14f07f9a1b4"},{"name":"AssertionError: assert 2 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f3a181cc7d0>>([1, 2, 2, 3, 1])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f3a181cc7d0>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f3a181cc7d0>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f3a181cc7d0> = Solution()","children":[{"name":"test Python","uid":"86d5c5538103a767","parentUid":"656b52068fa1308ee1849f0b39322997","status":"failed","time":{"start":1700324034091,"stop":1700324034092,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":["tag Python"]}],"uid":"656b52068fa1308ee1849f0b39322997"},{"name":"AssertionError: assert 6 == 0\n +  where 0 = <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f3a181c5f40>>([1, 2, 2, 3, 1, 4, ...])\n +    where <bound method Solution.findShortestSubArray of <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f3a181c5f40>> = <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f3a181c5f40>.findShortestSubArray\n +      where <src.main.java.problems.easy.DegreeOfAnArray.degree_of_an_array.Solution object at 0x7f3a181c5f40> = Solution()","children":[{"name":"test Python","uid":"8c03c1f28682ce45","parentUid":"4d6056ee4c01b1ae1fc22df3446aec25","status":"failed","time":{"start":1700324034095,"stop":1700324034096,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":["tag Python"]}],"uid":"4d6056ee4c01b1ae1fc22df3446aec25"},{"name":"AssertionError: assert 'One' == 'Zero'\n  - Zero\n  + One","children":[{"name":"test Python","uid":"82ea540d20ded799","parentUid":"9123ab527d641dc38f1b3f28156694cf","status":"failed","time":{"start":1700324034150,"stop":1700324034150,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["'One'","1"],"tags":["tag Python"]}],"uid":"9123ab527d641dc38f1b3f28156694cf"},{"name":"expected: <2> but was: <0>","children":[{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"70d77a3896f0baf5","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700324196236,"stop":1700324196307,"duration":71},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] [1, 2, 2, 3, 1], 2","uid":"65e397370f4543d7","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700324196494,"stop":1700324196501,"duration":7},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1]","2"],"tags":[]},{"name":"test Degree of an array [1] inputArray=[1, 2, 2, 3, 1], expectedResult=2","uid":"30f2cf92717a687b","parentUid":"1b76bbb71605dc05c40417bab1c64cee","status":"failed","time":{"start":1700324196658,"stop":1700324196666,"duration":8},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["2","[1, 2, 2, 3, 1]"],"tags":[]}],"uid":"1b76bbb71605dc05c40417bab1c64cee"},{"name":"expected: <6> but was: <0>","children":[{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"a9942841c841bd6a","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700324196371,"stop":1700324196398,"duration":27},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] [1, 2, 2, 3, 1, 4, 2], 6","uid":"ba0388e46ea39461","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700324196521,"stop":1700324196546,"duration":25},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[1, 2, 2, 3, 1, 4, 2]","6"],"tags":[]},{"name":"test Degree of an array [2] inputArray=[1, 2, 2, 3, 1, 4, 2], expectedResult=6","uid":"e6fa3bf5b1a21c43","parentUid":"81358dd8b9856946968faa7abcb09861","status":"failed","time":{"start":1700324196708,"stop":1700324196720,"duration":12},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["6","[1, 2, 2, 3, 1, 4, 2]"],"tags":[]}],"uid":"81358dd8b9856946968faa7abcb09861"},{"name":"expected: <1> but was: <-1>","children":[{"name":"test Maximum subarray [7] [-1], 1","uid":"e05835aad59e193b","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700324197359,"stop":1700324197372,"duration":13},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-1]","1"],"tags":[]},{"name":"test Maximum subarray [8] [-2, -1], 1","uid":"c686c05057c1a25b","parentUid":"695ea6ea5dee800d5d4f9590f68ac3d6","status":"failed","time":{"start":1700324197406,"stop":1700324197417,"duration":11},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":["[-2, -1]","1"],"tags":[]}],"uid":"695ea6ea5dee800d5d4f9590f68ac3d6"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"AttributeError: 'SolutionTest' object has no attribute 'assertEquals'. Did you mean: 'assertEqual'?","children":[{"name":"test Combination sum 01","uid":"267ede65f716ece9","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700324033988,"stop":1700324033989,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 02","uid":"afe507f50105f65a","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700324034021,"stop":1700324034022,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 03","uid":"6b3e750581b804d5","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700324034031,"stop":1700324034031,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 04","uid":"b92ac734774715cd","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700324034042,"stop":1700324034042,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]},{"name":"test Combination sum 05","uid":"bc537cadce7ab1c2","parentUid":"8b28b79d3c747cdf21e370fc8cdc4919","status":"broken","time":{"start":1700324034051,"stop":1700324034052,"duration":1},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[],"tags":["tag Python"]}],"uid":"8b28b79d3c747cdf21e370fc8cdc4919"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}