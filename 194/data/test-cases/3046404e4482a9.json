{
  "uid" : "3046404e4482a9",
  "name" : "test Python",
  "fullName" : "src.test.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree#test_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree",
  "historyId" : "622c300aaa3e05bb42020b6e02571152",
  "time" : {
    "start" : 1700313027713,
    "stop" : 1700313027713,
    "duration" : 0
  },
  "status" : "skipped",
  "statusMessage" : "Skipped: TODO: no way of currently testing this",
  "statusTrace" : "('/home/runner/work/testLeCo/testLeCo/src/test/java/challenges/c20210101_20210107/FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree/test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree.py', 12, 'Skipped: TODO: no way of currently testing this')",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "tag Python"
  }, {
    "name" : "feature",
    "value" : "feature 20210202-20210107"
  }, {
    "name" : "story",
    "value" : "story Find a corresponding node of a binary tree in a clone of that tree"
  }, {
    "name" : "epic",
    "value" : "epic Challenges"
  }, {
    "name" : "parentSuite",
    "value" : "suite Python"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.skip(reason='TODO: no way of currently testing this')"
  }, {
    "name" : "suite",
    "value" : "test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree"
  }, {
    "name" : "host",
    "value" : "fv-az1153-970"
  }, {
    "name" : "thread",
    "value" : "2377-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "cloned",
    "value" : "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fbcbd8ec8c0>"
  }, {
    "name" : "expected_result",
    "value" : "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fbcbd8ecd70>"
  }, {
    "name" : "original",
    "value" : "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fbcbd8e7ec0>"
  }, {
    "name" : "target",
    "value" : "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fbcbd8ed340>"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "tag Python", "@pytest.mark.skip(reason='TODO: no way of currently testing this')" ]
  },
  "source" : "3046404e4482a9.json",
  "parameterValues" : [ "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fbcbd8ec8c0>", "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fbcbd8ecd70>", "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fbcbd8e7ec0>", "<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7fbcbd8ed340>" ]
}