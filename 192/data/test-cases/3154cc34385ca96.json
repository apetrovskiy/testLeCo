{"uid":"3154cc34385ca96","name":"test Python","fullName":"src.test.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree#test_find_a_corresponding_node_of_a_binary_tree_in_a_clone_of_that_tree","historyId":"df7843d5dbbe36d667422a86491abe58","time":{"start":1700277325785,"stop":1700277325785,"duration":0},"status":"skipped","statusMessage":"Skipped: TODO: no way of currently testing this","statusTrace":"('/home/runner/work/testLeCo/testLeCo/src/test/java/challenges/c20210101_20210107/FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree/test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree.py', 12, 'Skipped: TODO: no way of currently testing this')","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"story","value":"story Find a corresponding node of a binary tree in a clone of that tree"},{"name":"parentSuite","value":"suite Python"},{"name":"epic","value":"epic Challenges"},{"name":"feature","value":"feature 20210202-20210107"},{"name":"tag","value":"tag Python"},{"name":"tag","value":"@pytest.mark.skip(reason='TODO: no way of currently testing this')"},{"name":"suite","value":"test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree"},{"name":"host","value":"fv-az1433-80"},{"name":"thread","value":"2178-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.test.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.test_find_a_corresponding_node_of_a_Binary_tree_in_a_clone_of_that_tree"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cloned","value":"<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7f3c2c62ff20>"},{"name":"expected_result","value":"<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7f3c2c3ad460>"},{"name":"original","value":"<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7f3c2c592750>"},{"name":"target","value":"<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7f3c2c62d610>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["tag Python","@pytest.mark.skip(reason='TODO: no way of currently testing this')"]},"source":"3154cc34385ca96.json","parameterValues":["<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7f3c2c62ff20>","<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7f3c2c3ad460>","<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7f3c2c592750>","<src.main.java.challenges.c20210101_20210107.FindACorrespondingNodeOfABinaryTreeInACloneOfThatTree.solution3.TreeNode object at 0x7f3c2c62d610>"]}